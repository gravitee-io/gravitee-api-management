suite: Test API Gateway Ingress - annotations
templates:
  - "api/api-ingress-management.yaml"
tests:
  - it: Sets common ingress annotations
    set:
      common:
        annotations:
          acme.com/team: api
          acme.com/feature: products
    asserts:
      - equal:
          path: metadata.annotations
          value:
            acme.com/team: api
            acme.com/feature: products

  - it: Check Ingress annotations with nginx ingress class
    set:
      api:
        ingress:
          management:
            annotations:
              kubernetes.io/ingress.class: nginx
              my-annotation: my-annotation-value
              nginx.ingress.kubernetes.io/rewrite-target: /$1
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - isAPIVersion:
          of: networking.k8s.io/v1
      - notExists:
          path: spec.ingressClassName
      - isNotEmpty:
          path: metadata.annotations["kubernetes.io/ingress.class"]
      - isNotEmpty:
          path: metadata.annotations["my-annotation"]
      - isNotEmpty:
          path: metadata.annotations["nginx.ingress.kubernetes.io/rewrite-target"]

  - it: Check Ingress annotations with nginx-internal ingress class
    set:
      api:
        ingress:
          management:
            annotations:
              kubernetes.io/ingress.class: nginx-internal
              my-annotation: my-annotation-value
              nginx.ingress.kubernetes.io/rewrite-target: /$1
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - isAPIVersion:
          of: networking.k8s.io/v1
      - notExists:
          path: spec.ingressClassName
      - isNotEmpty:
          path: metadata.annotations["kubernetes.io/ingress.class"]
      - isNotEmpty:
          path: metadata.annotations["my-annotation"]
      - isNotEmpty:
          path: metadata.annotations["nginx.ingress.kubernetes.io/rewrite-target"]

  - it: Check Ingress annotations with other ingress class
    set:
      api:
        ingress:
          management:
            annotations:
              kubernetes.io/ingress.class: other
              my-annotation: my-annotation-value
              nginx.ingress.kubernetes.io/rewrite-target: /$1
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - isAPIVersion:
          of: networking.k8s.io/v1
      - notExists:
          path: spec.ingressClassName
      - isNotEmpty:
          path: metadata.annotations["kubernetes.io/ingress.class"]
      - isNotEmpty:
          path: metadata.annotations["my-annotation"]
      - notExists:
          path: metadata.annotations["nginx.ingress.kubernetes.io/rewrite-target"]

  - it: Check Ingress annotations with nginx ingressClassName
    set:
      api:
        ingress:
          management:
            ingressClassName: nginx
            annotations:
              my-annotation: my-annotation-value
              nginx.ingress.kubernetes.io/rewrite-target: /$1
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - isAPIVersion:
          of: networking.k8s.io/v1
      - equal:
          path: spec.ingressClassName
          value: nginx
      - equal:
          path: metadata.annotations
          value:
            my-annotation: my-annotation-value
            nginx.ingress.kubernetes.io/rewrite-target: /$1

  - it: Check Ingress annotations with other ingressClassName
    set:
      api:
        ingress:
          management:
            ingressClassName: other
            annotations:
              my-annotation: my-annotation-value
              nginx.ingress.kubernetes.io/rewrite-target: /$1
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - isAPIVersion:
          of: networking.k8s.io/v1
      - equal:
          path: spec.ingressClassName
          value: other
      - isNotEmpty:
          path: metadata.annotations["my-annotation"]
      - notExists:
          path: metadata.annotations["nginx.ingress.kubernetes.io/rewrite-target"]

  - it: Check Ingress annotations with empty ingressClassName
    set:
      api:
        ingress:
          management:
            ingressClassName: ""
            annotations:
              my-annotation: my-annotation-value
              nginx.ingress.kubernetes.io/rewrite-target: /$1
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - isAPIVersion:
          of: networking.k8s.io/v1
      - equal:
          path: metadata.annotations
          value:
            my-annotation: my-annotation-value
            nginx.ingress.kubernetes.io/rewrite-target: /$1
