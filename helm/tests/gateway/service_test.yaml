suite: Test API Gateway default Service
templates:
  - "gateway/gateway-service.yaml"
  - "gateway/gateway-configmap.yaml"
tests:
  - it: Check default service
    template: gateway/gateway-service.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - isAPIVersion:
          of: v1
      - equal:
          path: spec.type
          value: ClusterIP
      - isNull:
          path: spec.externalTrafficPolicy
      - contains:
          path: spec.ports
          content:
            port: 82
            targetPort: 8082
            protocol: TCP
            name: gateway
            appProtocol: http

  - it: Check multi-server, multi-service settings
    template: gateway/gateway-service.yaml
    set:
      gateway:
        servers:
          - type: http
            port: 8080
            service:
              type: ClusterIP
              externalPort: 80
              appProtocol: http
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - isAPIVersion:
          of: v1
      - equal:
          path: spec.type
          value: ClusterIP
      - isNull:
          path: spec.externalTrafficPolicy
      - contains:
          path: spec.ports
          content:
            appProtocol: http
            name: gateway-0
            port: 80
            protocol: TCP
            targetPort: 8080

  - it: Check service with custom appProtocol
    template: gateway/gateway-service.yaml
    set:
      gateway:
        service:
          appProtocol: https
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - isAPIVersion:
          of: v1
      - equal:
          path: spec.type
          value: ClusterIP
      - contains:
          path: spec.ports
          content:
            port: 82
            targetPort: 8082
            protocol: TCP
            name: gateway
            appProtocol: https

  - it: Deploy with long gateway name
    template: gateway/gateway-service.yaml
    set:
      gateway:
        name: "I-am-a-very-long-name-Neque-porro-quisquam-est-qui-dolorem-ipsum-quia-dolor-sit"
        services:
          bridge:
            enabled: true
            service:
              externalPort: 42
          core:
            service:
              enabled: true
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - equal:
          path: spec.ports
          value: 
            - appProtocol: http
              name: I-am-a-very-long-name-Neque-porro-quisquam-est-qui-dolorem-ipsu
              port: 82
              protocol: TCP
              targetPort: 8082
            - appProtocol: http
              name: I-am-a-very-long-name-Neque-porro-quisquam-est-qui-dolor-bridge
              port: 42
              protocol: TCP
              targetPort: 18092
            - appProtocol: http
              name: I-am-a-very-long-name-Neque-porro-quisquam-est-qui-do-technical
              port: null
              protocol: TCP
              targetPort: 18082

  - it: Deploy with NodePort and externalTrafficPolicy
    template: gateway/gateway-service.yaml
    set:
      gateway:
        service:
          type: NodePort
          externalTrafficPolicy: Local
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.externalTrafficPolicy
          value: Local

  - it: Deploy with NodePort and fixed port
    template: gateway/gateway-service.yaml
    set:
      gateway:
        service:
          type: NodePort
          nodePort: 30082
    asserts:
      - hasDocuments:
          count: 1
      - contains:
          path: spec.ports
          content:
            port: 82
            targetPort: 8082
            nodePort: 30082
            protocol: TCP
            name: gateway
            appProtocol: http

  - it: Deploy with LoadBalancer and externalTrafficPolicy
    template: gateway/gateway-service.yaml
    set:
      gateway:
        service:
          type: LoadBalancer
          externalTrafficPolicy: Local
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.externalTrafficPolicy
          value: Local

  - it: Check DB Less mode
    template: gateway/gateway-service.yaml
    set:
      global:
        kubeVersion: 1.23.0
      apim:
        dbLess: true
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - isAPIVersion:
          of: v1

  - it: Check service annotations
    template: gateway/gateway-service.yaml
    set:
      gateway:
        service:
          annotations:
            loadbalancer.openstack.org/proxy-protocol: true
    asserts:
      - equal:
          path: metadata.annotations["loadbalancer.openstack.org/proxy-protocol"]
          value: "true"


  - it: Should set loadBalancerSourceRanges
    template: gateway/gateway-service.yaml
    set:
      gateway:
        service:
          type: LoadBalancer
          loadBalancerSourceRanges:
            - 35.191.0.0/16
    asserts:
      - equal:
          path: spec.loadBalancerSourceRanges
          value:
            - "35.191.0.0/16"
