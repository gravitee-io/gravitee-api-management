suite: Test API Gateway default deployment
templates:
  - "gateway/gateway-deployment.yaml"
  - "gateway/gateway-configmap.yaml"
tests:
  - it: Check default readinessProbe
    template: gateway/gateway-deployment.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.path
          value: /_node/health?probes=http-server
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.httpHeaders[0].value
          value: Basic YWRtaW46YWRtaW5hZG1pbg==
      - notExists:
          path: spec.template.spec.containers[0].readinessProbe.tcpSocket

  - it: Check default readinessProbe without security
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        services:
          core:
            http:
              authentication:
                type: none
    asserts:
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.path
          value: /_node/health?probes=http-server
      - notExists:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.httpHeaders

  - it: Check default readinessProbe with kafka enabled
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        kafka:
          enabled: true
    asserts:
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.path
          value: /_node/health?probes=http-server,kafka-server
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.httpHeaders[0].value
          value: Basic YWRtaW46YWRtaW5hZG1pbg==
      - notExists:
          path: spec.template.spec.containers[0].readinessProbe.tcpSocket

  - it: Check default livenessProbe
    template: gateway/gateway-deployment.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.path
          value: /_node/health?probes=http-server
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.httpHeaders[0].value
          value: Basic YWRtaW46YWRtaW5hZG1pbg==
      - notExists:
          path: spec.template.spec.containers[0].livenessProbe.tcpSocket

  - it: Check default livenessProbe with kafka enabled
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        kafka:
          enabled: true
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.path
          value: /_node/health?probes=http-server,kafka-server
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.httpHeaders[0].value
          value: Basic YWRtaW46YWRtaW5hZG1pbg==
      - notExists:
          path: spec.template.spec.containers[0].livenessProbe.tcpSocket

  - it: Check default livenessProbe without security
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        services:
          core:
            http:
              authentication:
                type: none
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.path
          value: /_node/health?probes=http-server
      - notExists:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.httpHeaders

  - it: Check default startupProbe
    template: gateway/gateway-deployment.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].startupProbe.httpGet.path
          value: /_node/health?probes=http-server,sync-process
      - equal:
          path: spec.template.spec.containers[0].startupProbe.httpGet.httpHeaders[0].value
          value: Basic YWRtaW46YWRtaW5hZG1pbg==
      - notExists:
          path: spec.template.spec.containers[0].startupProbe.tcpSocket

  - it: Check default startupProbe with kafka enabled
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        kafka:
          enabled: true
    asserts:
      - equal:
          path: spec.template.spec.containers[0].startupProbe.httpGet.path
          value: /_node/health?probes=http-server,sync-process,kafka-server
      - equal:
          path: spec.template.spec.containers[0].startupProbe.httpGet.httpHeaders[0].value
          value: Basic YWRtaW46YWRtaW5hZG1pbg==
      - notExists:
          path: spec.template.spec.containers[0].startupProbe.tcpSocket

  - it: Check default startupProbe without security
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        services:
          core:
            http:
              authentication:
                type: none
    asserts:
      - equal:
          path: spec.template.spec.containers[0].startupProbe.httpGet.path
          value: /_node/health?probes=http-server,sync-process
      - notExists:
          path: spec.template.spec.containers[0].startupProbe.httpGet.httpHeaders

  - it: Check custom readinessProbe
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        deployment:
          readinessProbe:
            enabled: false
          customReadinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
            failureThreshold: 3
    asserts:
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.tcpSocket.port
          value: http
      - notExists:
          path: spec.template.spec.containers[0].readinessProbe.httpGet

  - it: Check custom livenessProbe
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        deployment:
          livenessProbe:
            enabled: false
          customLivenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
            failureThreshold: 3
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.tcpSocket.port
          value: http
      - notExists:
          path: spec.template.spec.containers[0].livenessProbe.httpGet

  - it: Check custom startupProbe
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        deployment:
          startupProbe:
            enabled: false
          customStartupProbe:
            tcpSocket:
              port: http
            periodSeconds: 30
            failureThreshold: 3
    asserts:
      - equal:
          path: spec.template.spec.containers[0].startupProbe.tcpSocket.port
          value: http
      - notExists:
          path: spec.template.spec.containers[0].startupProbe.httpGet