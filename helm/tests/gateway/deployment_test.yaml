suite: Test API Gateway default deployment
templates:
  - "gateway/gateway-deployment.yaml"
  - "gateway/gateway-configmap.yaml"
tests:
  - it: Check default deployment
    template: gateway/gateway-deployment.yaml
    chart:
      version: 1.0.0-chart
      appVersion: 1.0.0-app
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - isAPIVersion:
          of: apps/v1
      - equal:
          path: spec.template.spec.containers[0].image
          value: graviteeio/apim-gateway:1.0.0-app-debian
      - isEmpty:
          # It should not contain environment variable by default
          path: spec.template.spec.containers[0].env
      - isEmpty:
          # It should not contain init containers by default
          path: spec.template.spec.initContainers
      - equal:
          path: spec.template.metadata.labels['helm.sh/chart']
          value: apim-1.0.0-chart

  - it: Check deploy specific APIM version
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        image:
          tag: 3.17.0
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - isAPIVersion:
          of: apps/v1
      - equal:
          path: spec.template.spec.containers[0].image
          value: graviteeio/apim-gateway:3.17.0
      - isEmpty:
          # It should not contain environment variable by default
          path: spec.template.spec.containers[0].env
      - isEmpty:
          # It should not contain init containers by default
          path: spec.template.spec.initContainers

  - it: Check deployment with revisionHistoryLimit
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        deployment:
          revisionHistoryLimit: 5
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - isAPIVersion:
          of: apps/v1
      - equal:
          path: spec.revisionHistoryLimit
          value: 5

  - it: Check deployment with JDBC support
    template: gateway/gateway-deployment.yaml
    set:
      management:
        type: "jdbc"
    chart:
      version: 1.0.0-chart
      appVersion: 3.15.2
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].image
          value: graviteeio/apim-gateway:3.15.2-debian
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[1].name
          value: graviteeio-apim-repository-jdbc-ext
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[1].mountPath
          value: /opt/graviteeio-gateway/plugins/ext/repository-jdbc

  - it: Set containerPort with custom port if core service is enabled
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        services:
          core:
            http:
              enabled: true
              port: 20202
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].ports
          value:
            - name: http
              containerPort: 8082
            - name: gateway-techapi
              containerPort: 20202
      - matchRegex:
          path: spec.template.spec.containers[0].ports[1].name
          # There is a k8s limitation that port names must be 15 characters or less
          pattern: ^.{0,15}$

  - it: Deploy with managed ServiceAccount
    template: gateway/gateway-deployment.yaml
    set:
      apim:
        managedServiceAccount: true
        serviceAccount: ""
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.serviceAccountName
          value: "RELEASE-NAME-apim"

  - it: Deploy with custom ServiceAccount
    template: gateway/gateway-deployment.yaml
    set:
      apim:
        managedServiceAccount: false
        serviceAccount: "test-sa"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.serviceAccountName
          value: "test-sa"

  - it: Deploy without ServiceAccount
    template: gateway/gateway-deployment.yaml
    set:
      apim:
        managedServiceAccount: false
        serviceAccount:
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - isEmpty:
          path: spec.template.spec.serviceAccountName

  - it: Deploy with custom managed ServiceAccount
    template: gateway/gateway-deployment.yaml
    set:
      apim:
        managedServiceAccount: true
        serviceAccount: "test-sa"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.serviceAccountName
          value: "test-sa"

  - it: Deploy with component specific ServiceAccount
    template: gateway/gateway-deployment.yaml
    set:
      apim:
        managedServiceAccount: true
        serviceAccount: "test-sa"
      gateway:
        deployment:
          serviceAccount: "apim-gateway"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.serviceAccountName
          value: "apim-gateway"

  - it: Deploy with long api name
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        name: "I-am-a-very-long-name"
        services:
          bridge:
            enabled: true
            service:
              externalPort: 92
              internalPort: 18092
          core:
            http:
              enabled: true
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].ports
          value: 
            - containerPort: 8082
              name: http
            - containerPort: 18092
              name: I-am-a-v-bridge
            - containerPort: 18082
              name: I-am-a-techapi

  - it: Check DB Less mode
    template: gateway/gateway-deployment.yaml
    chart:
      version: 1.0.0-chart
      appVersion: 1.0.0-app
    set:
      global:
        kubeVersion: 1.23.0
      apim:
        dbLess: true
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - isAPIVersion:
          of: apps/v1

  - it: Deploy with podSecurityContext
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        deployment:
          podSecurityContext:
            fsGroup: 1001
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.securityContext.fsGroup
          value: 1001

  - it: Default SecurityContext
    template: gateway/gateway-deployment.yaml
    set:
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].securityContext.runAsUser
          value: 1001
      - equal:
          path: spec.template.spec.containers[0].securityContext.runAsNonRoot
          value: true

  - it: Override SecurityContext
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        deployment:
          securityContext:
            runAsUser: 1002
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].securityContext.runAsUser
          value: 1002
      - equal:
          path: spec.template.spec.containers[0].securityContext.runAsNonRoot
          value: true

  - it: Multi-server setup
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        servers:
          - type: http
            port: 8080
          - type: tcp
            port: 9090
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].ports[0].name
          value: http-0
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 8080
      - equal:
          path: spec.template.spec.containers[0].ports[1].name
          value: tcp-1
      - equal:
          path: spec.template.spec.containers[0].ports[1].containerPort
          value: 9090

  - it: kubernetes service account projection enabled tests
    template: gateway/gateway-deployment.yaml
    set:
      apim:
        kubernetes:
          projection:
            enabled: true
            expirationSeconds: 600
            audience: all
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[0].name
          value: KUBERNETES_SERVICE_ACCOUNT_TOKEN_PROJECTION_ENABLED
      - equal:
          path: spec.template.spec.containers[0].env[0].value
          value: 'true'
      - equal:
          path: spec.template.spec.containers[0].env[1].name
          value: KUBERNETES_SERVICE_ACCOUNT_TOKEN_PATH
      - equal:
          path: spec.template.spec.containers[0].env[1].value
          value: '/var/run/secrets/tokens/vault-token'
      - equal:
          path: spec.template.spec.volumes[0].name
          value: vault-token
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name
          value: vault-token
