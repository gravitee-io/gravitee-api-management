@use 'sass:map';
@use '@angular/material' as mat;
@use '@gravitee/ui-particles-angular' as gio;

$borderColor: mat.m2-get-color-from-palette(gio.$mat-smoke-palette, 'lighter20');
$cardHeaderBorderColor: map.get(gio.$mat-theme, foreground);

.card {
  border: 1px solid $borderColor;
  border-radius: 8px;
  transition: height 0.3s ease-in-out;
  height: 100%;

  &__title {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 16px;

    &__tooltip-icon {
      color: mat.m2-get-color-from-palette(gio.$mat-smoke-palette, 'darker20');
    }
  }

  &__header {
    border-bottom: 1px solid mat.m2-get-color-from-palette($cardHeaderBorderColor, divider);
    flex: 1;
    align-items: center;
  }
}

.content {
  display: flex;
  flex-direction: column;
  max-width: 100%;
  overflow: hidden;
  position: relative;
  transition:
    min-height 0.3s ease-in-out,
    height 0.3s ease-in-out;
}

.icon {
  color: mat.m2-get-color-from-palette(gio.$mat-primary-palette, darker80);
  background: mat.m2-get-color-from-palette(gio.$mat-smoke-palette, lighter40);
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 20px;

  margin-bottom: 24px;
}

// State transition animations
.loading,
.error,
.empty {
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 1;
  transform: translateY(0);
  transition:
    opacity 0.3s ease-in-out,
    transform 0.3s ease-in-out,
    height 0.3s ease-in-out;
}

// Loading state
.loading {
  padding: 48px 16px;
  gio-loader {
    transition: opacity 0.2s ease-in-out;
  }
}

// Error and Empty states
.error,
.empty {
  padding: 16px;
  flex-direction: column;
  word-break: break-word;
  text-align: center;

  &.empty--small {
    min-height: 180px;
  }

  &.empty--medium {
    min-height: 240px;
  }

  &.empty--large {
    min-height: 350px;
  }
}

// Success state (chart content)
.success {
  opacity: 1;
  transform: translateY(0);
  transition:
    opacity 1s ease-in-out,
    transform 1s ease-in-out,
    height 0.3s ease-in-out;
}

// Fade in animation for state changes
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.loading,
.error,
.empty,
.success {
  animation: fadeIn 1s ease-out;
}
