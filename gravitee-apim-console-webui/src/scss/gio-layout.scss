@use 'sass:map';
@use '../constants';

// Value extracted from https://material.io/design/layout/responsive-layout-grid.html#breakpoints
$small-desktop-width: 905px;
$desktop-width: 1240px;
$large-desktop-width: 1440px;

$container-padding-top: 24px;

$container-padding-top: 24px;
$container-padding-bottom: 48px;

@mixin small-desktop() {
  @media (min-width: #{$small-desktop-width}) and (max-width: #{$desktop-width - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop-width}) and (max-width: #{$large-desktop-width - 1px}) {
    @content;
  }
}

@mixin large-desktop {
  @media (min-width: #{$large-desktop-width}) {
    @content;
  }
}

// Apply the content to the given breakpoint and all larger breakpoints
@mixin apply-to-equal-and-larger-breakpoints($desktop-breakpoint) {
  $breakpoints: (
    'small-desktop': $small-desktop-width,
    'desktop': $desktop-width,
    'large-desktop': $large-desktop-width,
  );

  @media (min-width: map.get($breakpoints, $desktop-breakpoint)) {
    @content;
  }
}

@mixin gio-responsive-margin-container {
  display: block;
  padding-top: $container-padding-top;
  padding-bottom: $container-padding-bottom;
  margin-left: 20px;
  margin-right: 20px;

  @include small-desktop {
    padding-left: calc((100% - 880px) / 2);
    padding-right: calc((100% - 880px) / 2);
  }

  @include desktop {
    padding-left: calc((100% - 880px) / 2);
    padding-right: calc((100% - 880px) / 2);
  }

  @include large-desktop {
    padding-left: calc((100% - 1080px) / 2);
    padding-right: calc((100% - 1080px) / 2);
  }
}

@mixin gio-responsive-content-container {
  display: block;
  padding: $container-padding-top 8px $container-padding-bottom 8px;

  @include large-desktop {
    padding-left: 40px;
    padding-right: 40px;
  }
}

@mixin gio-full-width-content-container {
  display: block;
  padding: 0;
}
