import { IMonacoRange, IMonacoCompletionItem, MonacoCompletionItemKind, MonacoCompletionItemInsertTextRule } from "../../../gravitee-monaco-wrapper/monaco-facade";

export const buttonSuggestions = (range: IMonacoRange, needsOpeningTag: boolean = false): IMonacoCompletionItem[] => {
  const prefix = needsOpeningTag ? '<' : '';
  const suffix = needsOpeningTag ? '>' : '';

  return [
    // Individual attribute suggestions
    {
      label: 'button:href',
      insertText: 'href="${1:url}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Button href attribute',
      documentation: 'Sets the URL the button links to',
    },
    {
      label: 'button:type',
      insertText: 'type="${1|internal,external|}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Button type attribute',
      documentation: 'Sets the link type (internal: same tab, external: new tab)',
    },
    {
      label: 'button:variant',
      insertText: 'variant="${1|filled,outlined,text|}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Button variant attribute',
      documentation: 'Sets the button style variant (filled, outlined, or text)',
    },
    {
      label: 'button:borderRadius',
      insertText: 'borderRadius="${1:4px}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Button border radius',
      documentation: 'Sets the border radius for rounded corners (CSS length value)',
    },
    {
      label: 'button:backgroundColor',
      insertText: 'backgroundColor="${1:#1976d2}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Button background color',
      documentation: 'Sets the background color of the button (CSS color value)',
    },
    {
      label: 'button:textColor',
      insertText: 'textColor="${1:#ffffff}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Button text color',
      documentation: 'Sets the text color of the button (CSS color value)',
    },
    {
      label: 'button:textTransform',
      insertText: 'textTransform="${1:none}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Button text transform',
      documentation: 'Sets the text transform style (none, uppercase, lowercase, capitalize)',
    },
    // Existing snippets with improved documentation
    {
      label: 'button',
      insertText: prefix + 'app-button href="${1:url}"' + suffix + '${2:Button Text}' + (needsOpeningTag ? '</app-button>' : ''),
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Button component with href',
      documentation: 'Creates a button that links to a URL with customizable text content\n\nAvailable attributes:\n• href: URL to link to\n• type: Link type (internal/external)\n• variant: Button style (filled/outlined/text)\n• borderRadius: Border radius\n• backgroundColor: Background color\n• textColor: Text color\n• textTransform: Text transform style',
    },
    {
      label: 'button-filled',
      insertText: prefix + 'app-button href="${1:url}" variant="filled"' + suffix + '${2:Button Text}' + (needsOpeningTag ? '</app-button>' : ''),
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Filled button component',
      documentation: 'Creates a filled button with solid background color\n\nAvailable attributes:\n• href: URL to link to\n• type: Link type (internal/external)\n• variant: Button style (filled/outlined/text)\n• borderRadius: Border radius\n• backgroundColor: Background color\n• textColor: Text color\n• textTransform: Text transform style',
    },
    {
      label: 'button-outlined',
      insertText: prefix + 'app-button href="${1:url}" variant="outlined"' + suffix + '${2:Button Text}' + (needsOpeningTag ? '</app-button>' : ''),
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Outlined button component',
      documentation: 'Creates an outlined button with border and transparent background\n\nAvailable attributes:\n• href: URL to link to\n• type: Link type (internal/external)\n• variant: Button style (filled/outlined/text)\n• borderRadius: Border radius\n• backgroundColor: Background color\n• textColor: Text color\n• textTransform: Text transform style',
    },
    {
      label: 'button-text',
      insertText: prefix + 'app-button href="${1:url}" variant="text"' + suffix + '${2:Button Text}' + (needsOpeningTag ? '</app-button>' : ''),
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Text button component',
      documentation: 'Creates a text button with no background or border\n\nAvailable attributes:\n• href: URL to link to\n• type: Link type (internal/external)\n• variant: Button style (filled/outlined/text)\n• borderRadius: Border radius\n• backgroundColor: Background color\n• textColor: Text color\n• textTransform: Text transform style',
    },
    {
      label: 'button-external',
      insertText: prefix + 'app-button href="${1:url}" type="external"' + suffix + '${2:Button Text}' + (needsOpeningTag ? '</app-button>' : ''),
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'External link button',
      documentation: 'Creates a button that opens the link in a new tab\n\nAvailable attributes:\n• href: URL to link to\n• type: Link type (internal/external)\n• variant: Button style (filled/outlined/text)\n• borderRadius: Border radius\n• backgroundColor: Background color\n• textColor: Text color\n• textTransform: Text transform style',
    },
    {
      label: 'button-custom-styled',
      insertText: prefix + 'app-button href="${1:url}" variant="${2:filled}" backgroundColor="${3:#1976d2}" textColor="${4:#ffffff}" borderRadius="${5:8px}"' + suffix + '${6:Button Text}' + (needsOpeningTag ? '</app-button>' : ''),
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Custom styled button',
      documentation: 'Creates a button with custom background color, text color, and border radius\n\nAvailable attributes:\n• href: URL to link to\n• type: Link type (internal/external)\n• variant: Button style (filled/outlined/text)\n• borderRadius: Border radius\n• backgroundColor: Background color\n• textColor: Text color\n• textTransform: Text transform style',
    },
  ];
};
