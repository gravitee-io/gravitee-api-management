import { IMonacoRange, IMonacoCompletionItem, MonacoCompletionItemKind, MonacoCompletionItemInsertTextRule } from "../../../gravitee-monaco-wrapper/monaco-facade";

export const gridSuggestions = (range: IMonacoRange, needsOpeningTag: boolean = false): IMonacoCompletionItem[] => {
  const prefix = needsOpeningTag ? '<' : '';
  const suffix = needsOpeningTag ? '>' : '';
  const closingTag = needsOpeningTag ? '</app-grid>' : '';
  
  return [
    // Individual attribute suggestions for grid
    {
      label: 'grid:columns',
      insertText: 'columns="${1|2,3,4,5,6|}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid columns attribute',
      documentation: 'Sets the number of columns in the grid (2-6)',
    },
    {
      label: 'grid:gap',
      insertText: 'gap="${1|small,medium,large,xl|}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid gap attribute',
      documentation: 'Sets the gap between grid items (small, medium, large, xl)',
    },
    {
      label: 'grid:align',
      insertText: 'align="${1|start,center,end,stretch|}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid alignment attribute',
      documentation: 'Sets the vertical alignment of grid items (start, center, end, stretch)',
    },
    {
      label: 'grid:backgroundColor',
      insertText: 'backgroundColor="${1:transparent}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid background color',
      documentation: 'Sets the background color of the grid (CSS color value)',
    },
    {
      label: 'grid:padding',
      insertText: 'padding="${1:0}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid padding',
      documentation: 'Sets the padding of the grid (CSS length value)',
    },
    {
      label: 'grid:borderRadius',
      insertText: 'borderRadius="${1:0}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid border radius',
      documentation: 'Sets the border radius of the grid (CSS length value)',
    },
    // Existing snippets with improved documentation
    {
      label: 'grid',
      insertText: prefix + 'app-grid columns="${1:3}"' + suffix + '\n\t<app-grid-cell>\n\t\t${2:Cell content goes here...}\n\t</app-grid-cell>\n' + closingTag,
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Basic grid component',
      documentation: 'Creates a responsive grid with configurable columns\n\nAvailable attributes:\n• columns: Number of columns (2-6)\n• gap: Gap between items (small/medium/large/xl)\n• align: Vertical alignment (start/center/end/stretch)\n• backgroundColor: Background color\n• padding: Grid padding\n• borderRadius: Border radius',
    },
    {
      label: 'grid-with-markdown',
      insertText: prefix + 'app-grid columns="${1:3}"' + suffix + '\n\t<app-grid-cell markdown="true">\n\t\t${2:Markdown content goes here...}\n\t</app-grid-cell>\n' + closingTag,
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid with markdown cells',
      documentation: 'Creates a grid with cells that render markdown content\n\nAvailable attributes:\n• columns: Number of columns (2-6)\n• gap: Gap between items (small/medium/large/xl)\n• align: Vertical alignment (start/center/end/stretch)\n• backgroundColor: Background color\n• padding: Grid padding\n• borderRadius: Border radius',
    },
    {
      label: 'grid-2-columns',
      insertText: prefix + 'app-grid columns="2"' + suffix + '\n\t<app-grid-cell>\n\t\t${1:First cell content}\n\t</app-grid-cell>\n\t<app-grid-cell>\n\t\t${2:Second cell content}\n\t</app-grid-cell>\n' + closingTag,
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: '2-column grid',
      documentation: 'Creates a 2-column responsive grid\n\nAvailable attributes:\n• columns: Number of columns (2-6)\n• gap: Gap between items (small/medium/large/xl)\n• align: Vertical alignment (start/center/end/stretch)\n• backgroundColor: Background color\n• padding: Grid padding\n• borderRadius: Border radius',
    },
    {
      label: 'grid-3-columns',
      insertText: prefix + 'app-grid columns="3"' + suffix + '\n\t<app-grid-cell>\n\t\t${1:First cell content}\n\t</app-grid-cell>\n\t<app-grid-cell>\n\t\t${2:Second cell content}\n\t</app-grid-cell>\n\t<app-grid-cell>\n\t\t${3:Third cell content}\n\t</app-grid-cell>\n' + closingTag,
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: '3-column grid',
      documentation: 'Creates a 3-column responsive grid\n\nAvailable attributes:\n• columns: Number of columns (2-6)\n• gap: Gap between items (small/medium/large/xl)\n• align: Vertical alignment (start/center/end/stretch)\n• backgroundColor: Background color\n• padding: Grid padding\n• borderRadius: Border radius',
    },
    {
      label: 'grid-4-columns',
      insertText: prefix + 'app-grid columns="4"' + suffix + '\n\t<app-grid-cell>\n\t\t${1:First cell content}\n\t</app-grid-cell>\n\t<app-grid-cell>\n\t\t${2:Second cell content}\n\t</app-grid-cell>\n\t<app-grid-cell>\n\t\t${3:Third cell content}\n\t</app-grid-cell>\n\t<app-grid-cell>\n\t\t${4:Fourth cell content}\n\t</app-grid-cell>\n' + closingTag,
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: '4-column grid',
      documentation: 'Creates a 4-column responsive grid\n\nAvailable attributes:\n• columns: Number of columns (2-6)\n• gap: Gap between items (small/medium/large/xl)\n• align: Vertical alignment (start/center/end/stretch)\n• backgroundColor: Background color\n• padding: Grid padding\n• borderRadius: Border radius',
    },
    {
      label: 'grid-styled',
      insertText: prefix + 'app-grid columns="${1:3}" gap="${2:large}" align="${3:center}"' + suffix + '\n\t<app-grid-cell>\n\t\t${4:Cell content goes here...}\n\t</app-grid-cell>\n' + closingTag,
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Styled grid component',
      documentation: 'Creates a grid with custom gap and alignment\n\nAvailable attributes:\n• columns: Number of columns (2-6)\n• gap: Gap between items (small/medium/large/xl)\n• align: Vertical alignment (start/center/end/stretch)\n• backgroundColor: Background color\n• padding: Grid padding\n• borderRadius: Border radius',
    },
    {
      label: 'grid-with-cards',
      insertText: prefix + 'app-grid columns="${1:3}" gap="${2:large}"' + suffix + '\n\t<app-grid-cell>\n\t\t<app-card title="${3:Card 1}" centered="true">\n\t\t\t${4:Card content}\n\t\t</app-card>\n\t</app-grid-cell>\n\t<app-grid-cell>\n\t\t<app-card title="${5:Card 2}" centered="true">\n\t\t\t${6:Card content}\n\t\t</app-card>\n\t</app-grid-cell>\n\t<app-grid-cell>\n\t\t<app-card title="${7:Card 3}" centered="true">\n\t\t\t${8:Card content}\n\t\t</app-card>\n\t</app-grid-cell>\n' + closingTag,
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid with cards',
      documentation: 'Creates a grid containing card components\n\nAvailable attributes:\n• columns: Number of columns (2-6)\n• gap: Gap between items (small/medium/large/xl)\n• align: Vertical alignment (start/center/end/stretch)\n• backgroundColor: Background color\n• padding: Grid padding\n• borderRadius: Border radius',
    },
    {
      label: 'grid-feature-showcase',
      insertText: prefix + 'app-grid columns="3" gap="large" align="center"' + suffix + '\n\t<app-grid-cell span="2" backgroundColor="primary" padding="large">\n\t\t## Featured Content\n\t\tThis cell spans 2 columns and has a primary background.\n\t</app-grid-cell>\n\t<app-grid-cell backgroundColor="light" shadow="elevated">\n\t\t### Side Content\n\t\tThis cell has a light background and elevated shadow.\n\t</app-grid-cell>\n\t<app-grid-cell backgroundColor="success" padding="large">\n\t\t### Success Content\n\t\tThis cell has a success background.\n\t</app-grid-cell>\n\t<app-grid-cell backgroundColor="warning" padding="large">\n\t\t### Warning Content\n\t\tThis cell has a warning background.\n\t</app-grid-cell>\n' + closingTag,
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Feature showcase grid',
      documentation: 'Creates a grid showcasing various cell styling options\n\nAvailable attributes:\n• columns: Number of columns (2-6)\n• gap: Gap between items (small/medium/large/xl)\n• align: Vertical alignment (start/center/end/stretch)\n• backgroundColor: Background color\n• padding: Grid padding\n• borderRadius: Border radius',
    },
  ];
};

export const gridCellSuggestions = (range: IMonacoRange, needsOpeningTag: boolean = false): IMonacoCompletionItem[] => {
  const prefix = needsOpeningTag ? '<' : '';
  const suffix = needsOpeningTag ? '>' : '';
  const closingTag = needsOpeningTag ? '</app-grid-cell>' : '';
  
  return [
    // Individual attribute suggestions for grid-cell
    {
      label: 'grid-cell:markdown',
      insertText: 'markdown="true"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid cell markdown attribute',
      documentation: 'Enables markdown rendering for cell content (boolean)',
    },
    {
      label: 'grid-cell:span',
      insertText: 'span="${1|1,2,3,4|}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid cell span attribute',
      documentation: 'Sets how many columns the cell spans (1-4)',
    },
    {
      label: 'grid-cell:padding',
      insertText: 'padding="${1|none,small,medium,large|}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid cell padding attribute',
      documentation: 'Sets the padding of the cell (none, small, medium, large)',
    },
    {
      label: 'grid-cell:border',
      insertText: 'border="true"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid cell border attribute',
      documentation: 'Adds a border to the cell (boolean)',
    },
    {
      label: 'grid-cell:shadow',
      insertText: 'shadow="${1|none,small,elevated|}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid cell shadow attribute',
      documentation: 'Sets the shadow style (none, small, elevated)',
    },
    {
      label: 'grid-cell:backgroundColor',
      insertText: 'backgroundColor="${1|none,light,white,primary,success,warning,danger,info|}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid cell background color',
      documentation: 'Sets the background color variant (none, light, white, primary, success, warning, danger, info)',
    },
    {
      label: 'grid-cell:customBackgroundColor',
      insertText: 'customBackgroundColor="${1:#f8f9fa}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid cell custom background color',
      documentation: 'Sets a custom background color (CSS color value)',
    },
    {
      label: 'grid-cell:customBorderColor',
      insertText: 'customBorderColor="${1:#dee2e6}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid cell custom border color',
      documentation: 'Sets a custom border color (CSS color value)',
    },
    {
      label: 'grid-cell:customBorderRadius',
      insertText: 'customBorderRadius="${1:8px}"',
      kind: MonacoCompletionItemKind.Property,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid cell custom border radius',
      documentation: 'Sets a custom border radius (CSS length value)',
    },
    // Existing snippets with improved documentation
    {
      label: 'grid-cell',
      insertText: prefix + 'app-grid-cell' + suffix + '\n\t${1:Cell content goes here...}\n' + closingTag,
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Basic grid cell',
      documentation: 'Creates a basic grid cell with content projection\n\nAvailable attributes:\n• markdown: Enable markdown rendering (boolean)\n• span: Column span (1-4)\n• padding: Cell padding (none/small/medium/large)\n• border: Add border (boolean)\n• shadow: Shadow style (none/small/elevated)\n• backgroundColor: Background variant\n• customBackgroundColor: Custom background color\n• customBorderColor: Custom border color\n• customBorderRadius: Custom border radius',
    },
    {
      label: 'grid-cell-markdown',
      insertText: prefix + 'app-grid-cell markdown="true"' + suffix + '\n\t${1:Markdown content goes here...}\n' + closingTag,
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid cell with markdown rendering',
      documentation: 'Creates a grid cell that renders its content as markdown\n\nAvailable attributes:\n• markdown: Enable markdown rendering (boolean)\n• span: Column span (1-4)\n• padding: Cell padding (none/small/medium/large)\n• border: Add border (boolean)\n• shadow: Shadow style (none/small/elevated)\n• backgroundColor: Background variant\n• customBackgroundColor: Custom background color\n• customBorderColor: Custom border color\n• customBorderRadius: Custom border radius',
    },
    {
      label: 'grid-cell-styled',
      insertText: prefix + 'app-grid-cell span="${1:1}" padding="${2:medium}" border="true" shadow="${3:small}" backgroundColor="${4:light}"' + suffix + '\n\t${5:Cell content goes here...}\n' + closingTag,
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Styled grid cell',
      documentation: 'Creates a grid cell with custom styling\n\nAvailable attributes:\n• markdown: Enable markdown rendering (boolean)\n• span: Column span (1-4)\n• padding: Cell padding (none/small/medium/large)\n• border: Add border (boolean)\n• shadow: Shadow style (none/small/elevated)\n• backgroundColor: Background variant\n• customBackgroundColor: Custom background color\n• customBorderColor: Custom border color\n• customBorderRadius: Custom border radius',
    },
    {
      label: 'grid-cell-wide',
      insertText: prefix + 'app-grid-cell span="2" backgroundColor="primary" padding="large"' + suffix + '\n\t## Wide Cell Content\n\t${1:This cell spans 2 columns and has a primary background.}\n' + closingTag,
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Wide grid cell',
      documentation: 'Creates a grid cell that spans 2 columns\n\nAvailable attributes:\n• markdown: Enable markdown rendering (boolean)\n• span: Column span (1-4)\n• padding: Cell padding (none/small/medium/large)\n• border: Add border (boolean)\n• shadow: Shadow style (none/small/elevated)\n• backgroundColor: Background variant\n• customBackgroundColor: Custom background color\n• customBorderColor: Custom border color\n• customBorderRadius: Custom border radius',
    },
    {
      label: 'grid-cell-featured',
      insertText: prefix + 'app-grid-cell span="3" backgroundColor="success" padding="large" shadow="elevated"' + suffix + '\n\t## Featured Content\n\t${1:This cell spans 3 columns and has elevated styling.}\n' + closingTag,
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Featured grid cell',
      documentation: 'Creates a featured grid cell spanning 3 columns\n\nAvailable attributes:\n• markdown: Enable markdown rendering (boolean)\n• span: Column span (1-4)\n• padding: Cell padding (none/small/medium/large)\n• border: Add border (boolean)\n• shadow: Shadow style (none/small/elevated)\n• backgroundColor: Background variant\n• customBackgroundColor: Custom background color\n• customBorderColor: Custom border color\n• customBorderRadius: Custom border radius',
    },
    {
      label: 'grid-cell-with-card',
      insertText: prefix + 'app-grid-cell padding="medium"' + suffix + '\n\t<app-card title="${1:Card Title}" centered="true">\n\t\t${2:Card content goes here...}\n\t</app-card>\n' + closingTag,
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid cell with card',
      documentation: 'Creates a grid cell containing a card component\n\nAvailable attributes:\n• markdown: Enable markdown rendering (boolean)\n• span: Column span (1-4)\n• padding: Cell padding (none/small/medium/large)\n• border: Add border (boolean)\n• shadow: Shadow style (none/small/elevated)\n• backgroundColor: Background variant\n• customBackgroundColor: Custom background color\n• customBorderColor: Custom border color\n• customBorderRadius: Custom border radius',
    },
    {
      label: 'grid-cell-with-image',
      insertText: prefix + 'app-grid-cell padding="medium" backgroundColor="light"' + suffix + '\n\t<app-image src="${1:/path/to/image.jpg}" alt="${2:Image description}" centered="true" rounded="true">\n\t</app-image>\n\t${3:Image caption or additional content}\n' + closingTag,
      kind: MonacoCompletionItemKind.Snippet,
      insertTextRules: MonacoCompletionItemInsertTextRule.InsertAsSnippet,
      range,
      detail: 'Grid cell with image',
      documentation: 'Creates a grid cell containing an image component\n\nAvailable attributes:\n• markdown: Enable markdown rendering (boolean)\n• span: Column span (1-4)\n• padding: Cell padding (none/small/medium/large)\n• border: Add border (boolean)\n• shadow: Shadow style (none/small/elevated)\n• backgroundColor: Background variant\n• customBackgroundColor: Custom background color\n• customBorderColor: Custom border color\n• customBorderRadius: Custom border radius',
    },
  ];
}; 