# Copyright (C) 2015 The Gravitee team (http://gravitee.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
openapi: 3.1.0
info:
  title: Gravitee.io GKO - Automation API
  description: |-
    The APIM automation API. 

  contact:
    email: team-gko@graviteesource.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
security:
  - BearerAuth: []
  - BasicAuth: []
servers:
  - url: "https://apim-master-api.team-apim.gravitee.dev/automation"
tags:
  - name: Shared Policy Group
    description: Everything about Shared Policy Groups
paths:
  /organizations/{orgId}/environments/{envId}/shared-policy-groups/{hrid}:
    parameters:
      - $ref: "#/components/parameters/orgIdParam"
      - $ref: "#/components/parameters/envIdParam"
      - $ref: "#/components/parameters/hridParam"
    get:
      operationId: getPolicyGroup
      tags:
        - Shared Policy Group
      summary: Get one policy group
      description: Get one policy group
      responses:
        "200":
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SharedPolicyGroupState"
        "401":
          description: No credential provided
        "403":
          description: Wrong credentials
        "500":
          description: Internal server error
    delete:
      operationId: deletePolicyGroup
      tags:
        - Shared Policy Group
      summary: Delete one policy group
      description: Delete one shared policy group
      parameters:
        - $ref: "#/components/parameters/dryRunQueryParam"
      responses:
        "204":
          description: Shared Policy Group successfully deleted
        default:
          $ref: "#/components/responses/Error"
  /organizations/{orgId}/environments/{envId}/shared-policy-groups:
    put:
      operationId: createOrUpdatePolicyGroup
      tags:
        - Shared Policy Group
      summary: Create or update Shared Policy Group from spec
      description: Create or update Shared Policy Group from spec
      parameters:
        - $ref: "#/components/parameters/orgIdParam"
        - $ref: "#/components/parameters/envIdParam"
        - $ref: "#/components/parameters/dryRunQueryParam"
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/SharedPolicyGroupSpec"
        required: true
      responses:
        "200":
          description: State of the successfully created / updated Shared Policy Group
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SharedPolicyGroupState"
        "400":
          $ref: "#/components/responses/Error"
        "401":
          description: No credential provided
        "403":
          description: Wrong credentials
        "500":
          description: Internal server error

components:
  schemas:
    Errors:
      description: >-
        When a resource has been created regardless of errors, this field
        is used to persist the error message encountered during
        admission
      properties:
        severe:
          description: >-
            severe errors do not pass admission and will block
            reconcile hence, this field should always be populated during the admission
            phase and is very unlikely to be persisted in the status
          items:
            type: string
          type: array
        warning:
          description: >-
            warning errors do not block object reconciliation,

            most of the time because the value is ignored or
            defaulted

            when the resource gets synced with APIM
          items:
            type: string
          type: array
      type: object
    SharedPolicyGroupState:
      allOf:
        - $ref: "#/components/schemas/SharedPolicyGroupSpec"
        - type: object
          properties:
            errors:
              $ref: "#/components/schemas/Errors"
        - type: object
          properties:
            crossId:
              description:
                The Cross ID is used to identify a shared policy group that has been promoted from
                one environment to another.
              type: string
            id:
              description:
                The id of the shared policy group.
              type: string
            environmentId:
              description:
                The environment ID of the shared policy group.
              type: string
            organizationId:
              description:
                The organization ID of the shared policy group.
              type: string
    SharedPolicyGroupSpec:
      description: Shared Policy Group Spec
      type: object
      properties:
        apiType:
          $ref: "#/components/schemas/ApiType"
        hrid:
          type: string
          pattern: '^[a-zA-Z][a-zA-Z0-9_-]{2,}$'
          description: A unique human readable id identifying the shared policy group
          examples:
            - "products"
        description:
          type: string
          description: The description of the shared policy group
          examples:
            - This is a shared policy group
          maxLength: 1024
        prerequisiteMessage:
          type: string
          description: The prerequisite message of the shared policy group. This message is displayed to the user to help understand the prerequisite to use the shared policy group.
          examples:
            - The resource cache "my-cache" is required
          maxLength: 1024
        name:
          type: string
          description: The name of the shared policy group
          examples:
            - My Shared Policy Group
          maxLength: 512
        phase:
          $ref: "#/components/schemas/FlowPhase"
        steps:
          description: SharedPolicyGroup Steps
          items:
            $ref: "#/components/schemas/FlowStep"
          type: array
      required:
        - apiType
        - name
        - phase
    SharedPolicyGroupLifecycleState:
      type: string
      description: The lifecycle state of a shared policy group
      enum:
        - DEPLOYED
        - UNDEPLOYED
        - PENDING
    FlowPhase:
      type: string
      description: The execution phase of a policy.
      enum:
        - REQUEST
        - RESPONSE
        - INTERACT
        - CONNECT
        - PUBLISH
        - SUBSCRIBE
    FlowStep:
      type: object
      properties:
        condition:
          description: FlowStep condition
          type: string
        configuration:
          description: FlowStep configuration is a map of arbitrary key-values
          type: object
          x-kubernetes-preserve-unknown-fields: true
        description:
          description: FlowStep description
          type: string
        enabled:
          default: true
          description: Indicate if this FlowStep is enabled or not
          type: boolean
        messageCondition:
          description: The message condition (supports EL expressions)
          type: string
        name:
          description: FlowStep name
          type: string
        policy:
          description: FlowStep policy
          type: string
      required:
        - enabled
    ApiType:
      type: string
      description: API's type.
      enum:
        - MESSAGE
        - PROXY
        - NATIVE
  responses:
    Error:
      description: Validation error
      content:
        application/json:
          schema:
            type: object
            properties:
              httpStatus:
                type: integer
                format: int32
                description: The error code
                examples:
                  - "400"
              message:
                type: string
                description: The error message
                examples:
                  - Bad request
              technicalCode:
                type: string
                description: A technical code to identify the error
                examples:
                  - invalid.import.definition
              parameters:
                type: object
                description: A map of parameters to be used in the error message
                additionalProperties:
                  type: string
              details:
                type: array
                description: A list of details about the error
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: The error message
                      examples:
                        - Bad request
                    location:
                      type: string
                      description: The json path of the field in error.
                      examples:
                        - updateApi.properties[0].key
                    invalidValue:
                      type: string
                      description: The invalid value.
  parameters:
    envIdParam:
      name: envId
      in: path
      required: true
      description: Id of an environment.
      schema:
        type: string
        default: DEFAULT
    orgIdParam:
      name: orgId
      in: path
      required: true
      description: Id of an organization.
      schema:
        type: string
        default: DEFAULT
    dryRunQueryParam:
      name: dryRun
      in: query
      description: |
        For modifying requests, this parameter allow you to test the result of an endpoint without actually persisting 
        the state of the underlying spec.
      schema:
        type: boolean
        default: false
    apiIdParam:
      name: apiId
      in: path
      required: true
      description: Id of an API.
      schema:
        type: string
    hridParam:
      name: hrid
      in: path
      required: true
      description: Human-readable ID of a spec
      schema:
        type: string
    pageParam:
      name: page
      in: query
      required: false
      description: The page number for pagination.
      schema:
        type: integer
        default: 1
    perPageParam:
      name: perPage
      in: query
      required: false
      description: |
        The number of items per page for pagination.
      schema:
        type: integer
        default: 10
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: Gravitee service account ID
