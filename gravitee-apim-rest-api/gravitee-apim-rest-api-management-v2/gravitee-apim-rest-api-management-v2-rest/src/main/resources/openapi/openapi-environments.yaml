openapi: 3.0.3
info:
    title: Gravitee.io APIM - Management API - Environments
    description: |-
        This is the OpenAPI specification for our new version of APIM Management API.
    contact:
        email: team-apim@graviteesource.com
    license:
        name: Apache 2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.html
    version: 2.0.0

security:
    - BasicAuth: []
    - CookieAuth: []

servers:
    - url: "{protocol}://{managementAPIHost}/management/v2/environments/{envId}"
      description: APIM Management API v2 - Default base URL
      variables:
          protocol:
              description: The protocol you want to use to communicate with the mAPI
              default: https
              enum:
                  - https
                  - http
          managementAPIHost:
              description: The domain of the server hosting your Management API
              default: localhost:8083
          envId:
              description: The unique ID of your environment
              default: DEFAULT
    - url: "{protocol}://{managementAPIHost}/management/v2/organizations/{orgId}/environments/{envId}"
      description: APIM Management API v2 - Base URL to target specific organizations
      variables:
          protocol:
              description: The protocol you want to use to communicate with the mAPI
              default: https
              enum:
                  - https
                  - http
          managementAPIHost:
              description: The domain of the server hosting your Management API
              default: localhost:8083
          orgId:
              description: The unique ID of your organization
              default: DEFAULT
          envId:
              description: The unique ID of your environment
              default: DEFAULT

tags:
    - name: SharedPolicyGroups
      description: Everything about shared policy groups

paths:
    # Environment Analytics
    /analytics/response-status-ranges:
      get:
        parameters:
          - $ref: "#/components/parameters/from"
          - $ref: "#/components/parameters/to"
        tags:
          - Environment Analytics
        summary: Get response status counts for all v4 APIs from specified environment
        description: |-
          Get v4 API analytics response status counts. Response statuses are grouped by endpoint and status code hundreds.

        operationId: getDashboardResponseStatusCodes
        responses:
          "200":
            $ref: "#/components/responses/EnvironmentAnalyticsResponseStatusRangesResponse"
          default:
            $ref: "#/components/responses/Error"
    /analytics/top-hits:
      get:
        parameters:
          - $ref: "#/components/parameters/from"
          - $ref: "#/components/parameters/to"
        tags:
          - Environment Analytics
        summary: Get all v4 APIs with hits count per API sorted by mostly requested
        description: |-
          Get v4 API analytics top hits counts. All APIs are sorted starting from the most requested ones.

        operationId: getDashboardTopHits
        responses:
          "200":
            $ref: "#/components/responses/EnvironmentAnalyticsTopHitsApisResponse"
          default:
            $ref: "#/components/responses/Error"
    /analytics/request-response-time:
      get:
        parameters:
          - $ref: "#/components/parameters/from"
          - $ref: "#/components/parameters/to"
        tags:
          - Environment Analytics
        summary: V4 APIs request and response times analytics
        description: |-
          Get analytics for v4 APIs regarding number of requests, requests per second and response max, min and average times for 
          specified time range. Analytics contains data only for HTTP GET, HTTP POST and HTTP PROXY entrypoints.

        operationId: getDashboardRequestResponseTime
        responses:
          "200":
            $ref: "#/components/responses/EnvironmentAnalyticsRequestResponseTimeResponse"
          default:
            $ref: "#/components/responses/Error"
    /analytics/response-time-over-time:
      parameters:
        - $ref: "#/components/parameters/from"
        - $ref: "#/components/parameters/to"
      get:
        tags:
          - Environment Analytics
        summary: Get Environment Analytics average response time over time
        description: |-
          Get Environment Analytics average response time over time
          
          User must have the API_ANALYTICS[READ] permission.
        operationId: getEnvironmentResponseTimeOverTime
        responses:
          "200":
            $ref: "#/components/responses/EnvironmentAnalyticsOverPeriodResponse"
    /analytics/response-status-overtime:
      parameters:
        - $ref: "#/components/parameters/from"
        - $ref: "#/components/parameters/to"
      get:
        tags:
          - API Analytics
        summary: Get Environment Analytics response status counts over time
        description: |-
          Get Environment analytics response status counts over time.
          
          User must have the API_ANALYTICS[READ] permission.
        operationId: getEnvironmentResponseStatusOvertime
        responses:
          "200":
            $ref: "#/components/responses/EnvironmentAnalyticsResponseStatusOvertimeResponse"
          default:
            $ref: "#/components/responses/Error"
    /analytics/top-apps-by-request-count:
        parameters:
            -   $ref: "#/components/parameters/from"
            -   $ref: "#/components/parameters/to"
        get:
            tags:
                - API Analytics
            summary: Get Environment Analytics for top applications by the request count
            description: |-
                Get Environment Analytics for top applications by the request count
                
                User must have the API_ANALYTICS[READ] permission.
            operationId: getEnvironmentTopAppByRequestCount
            responses:
                "200":
                    $ref: "#/components/responses/EnvironmentAnalyticsTopAppsByRequestCountResponse"
                default:
                    $ref: "#/components/responses/Error"
  # Shared policy group
    /shared-policy-groups:
        post:
            tags:
                - SharedPolicyGroups
            summary: Create a shared policy group
            operationId: createSharedPolicyGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateSharedPolicyGroup"
                required: true
            responses:
                "201":
                    description: Shared policy group created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SharedPolicyGroup"
                default:
                    $ref: "#/components/responses/Error"
        get:
            tags:
                - SharedPolicyGroups
            summary: Search shared policy groups
            operationId: searchSharedPolicyGroups
            parameters:
                - $ref: "./openapi-apis.yaml#/components/parameters/pageParam"
                - $ref: "./openapi-apis.yaml#/components/parameters/perPageParam"
                - $ref: "#/components/parameters/sharedPolicyGroupSortByParam"
                - $ref: "#/components/parameters/sharedPolicyGroupSearchParam"
            responses:
                "200":
                    $ref: "#/components/responses/SharedPolicyGroupsResponse"
                default:
                    $ref: "#/components/responses/Error"
    /shared-policy-groups/policy-plugins:
        get:
            tags:
                - SharedPolicyGroups
            summary: Get all shared policy group for a policy plugin usage
            operationId: getPolicyPlugins
            responses:
                "200":
                    description: Shared policy group found
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/SharedPolicyGroupPolicyPlugin"
                default:
                    $ref: "#/components/responses/Error"
    /shared-policy-groups/{sharedPolicyGroupId}:
        get:
            tags:
                - SharedPolicyGroups
            summary: Get a shared policy group
            operationId: getSharedPolicyGroup
            parameters:
                - $ref: "#/components/parameters/sharedPolicyGroupId"
            responses:
                "200":
                    description: Shared policy group found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SharedPolicyGroup"
                default:
                    $ref: "#/components/responses/Error"
        put:
            tags:
                - SharedPolicyGroups
            summary: Update a shared policy group
            operationId: updateSharedPolicyGroup
            parameters:
                - $ref: "#/components/parameters/sharedPolicyGroupId"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UpdateSharedPolicyGroup"
                required: true
            responses:
                "200":
                    description: Shared policy group updated
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SharedPolicyGroup"
                default:
                    $ref: "#/components/responses/Error"
        delete:
            tags:
                - SharedPolicyGroups
            summary: Delete a shared policy group
            operationId: deleteSharedPolicyGroup
            parameters:
                - $ref: "#/components/parameters/sharedPolicyGroupId"
            responses:
                "204":
                    description: Shared policy group deleted
                default:
                    $ref: "#/components/responses/Error"
    /shared-policy-groups/{sharedPolicyGroupId}/histories:
        get:
            tags:
                - SharedPolicyGroups
            summary: Get the histories of a shared policy group
            operationId: getSharedPolicyGroupHistories
            parameters:
                - $ref: "#/components/parameters/sharedPolicyGroupId"
                - $ref: "./openapi-apis.yaml#/components/parameters/pageParam"
                - $ref: "./openapi-apis.yaml#/components/parameters/perPageParam"
                - $ref: "#/components/parameters/sharedPolicyGroupHistoriesSortByParam"
            responses:
                "200":
                    $ref: "#/components/responses/SharedPolicyGroupHistoriesResponse"
                default:
                    $ref: "#/components/responses/Error"
    /shared-policy-groups/{sharedPolicyGroupId}/_deploy:
        post:
            tags:
                - SharedPolicyGroups
            summary: Deploy a shared policy group
            operationId: deploySharedPolicyGroup
            parameters:
                - $ref: "#/components/parameters/sharedPolicyGroupId"
            responses:
                "202":
                    description: Shared policy group deploy request has been accepted
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SharedPolicyGroup"
                default:
                    $ref: "#/components/responses/Error"
    /shared-policy-groups/{sharedPolicyGroupId}/_undeploy:
        post:
            tags:
                - SharedPolicyGroups
            summary: Undeploy a shared policy group
            operationId: undeploySharedPolicyGroup
            parameters:
                - $ref: "#/components/parameters/sharedPolicyGroupId"
            responses:
                "202":
                    description: Shared policy group undeploy request has been accepted
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SharedPolicyGroup"
                default:
                    $ref: "#/components/responses/Error"

    # Scoring
    /scoring/apis:
        get:
            tags:
                - Scoring
            summary: Get the scoring of all APIs
            operationId: getApisScoring
            parameters:
                - $ref: "#/components/parameters/pageParam"
                - $ref: "#/components/parameters/perPageParam"
            responses:
                "200":
                    $ref: "#/components/responses/EnvironmentApisScoringResponse"
                default:
                    $ref: "#/components/responses/Error"
    /scoring/overview:
        get:
            tags:
                - Scoring
            summary: Get Scoring Environment Overview
            operationId: getScoringEnvironmentOverview
            responses:
                "200":
                    description: Scoring overview of the environment
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/EnvironmentScoringOverview"
                default:
                    $ref: "#/components/responses/Error"
    /scoring/rulesets:
        post:
            tags:
                - Scoring
                - Rulesets
            summary: Create a new ruleset at environment level
            operationId: createEnvironmentRuleset
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ImportScoringRuleset"
                required: true
            responses:
                "201":
                    description: Ruleset created
                default:
                    $ref: "#/components/responses/Error"
        get:
            tags:
                - Scoring
                - Rulesets
            summary: Get all rulesets at environment level
            operationId: getEnvironmentRulesets
            responses:
                "200":
                    $ref: "#/components/responses/ScoringRulesetsResponse"
                default:
                    $ref: "#/components/responses/Error"
    /scoring/rulesets/{rulesetId}:
        delete:
            tags:
                - Scoring
                - Rulesets
            summary: Delete a ruleset
            operationId: deleteEnvironmentRuleset
            parameters:
                - $ref: "#/components/parameters/rulesetId"
            responses:
                "204":
                    description: Ruleset deleted
                default:
                    $ref: "#/components/responses/Error"
        get:
            tags:
                - Scoring
                - Rulesets
            summary: Get a specific ruleset
            operationId: getEnvironmentRuleset
            parameters:
                - $ref: "#/components/parameters/rulesetId"
            responses:
                "200":
                    description: Scoring ruleset found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ScoringRuleset"
                default:
                    $ref: "#/components/responses/Error"
        put:
            tags:
                - Scoring
                - Rulesets
            summary: Update ruleset
            operationId: updateEnvironmentRuleset
            parameters:
                - $ref: "#/components/parameters/rulesetId"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UpdateScoringRuleset"
                required: true
            responses:
                "200":
                    description: Ruleset updated
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ScoringRuleset"
                default:
                    $ref: "#/components/responses/Error"
    /scoring/functions:
      post:
        tags:
          - Scoring
          - Functions
        summary: Create a new scoring function at environment level
        operationId: createEnvironmentScoringFunction
        requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportScoringFunction"
          required: true
        responses:
          "201":
            description: Scoring functions created
          default:
            $ref: "#/components/responses/Error"
      get:
        tags:
          - Scoring
          - Functions
        summary: Get all functions at environment level
        operationId: getEnvironmentScoringFunctions
        responses:
          "200":
            $ref: "#/components/responses/ScoringFunctionsResponse"
          default:
            $ref: "#/components/responses/Error"
    /scoring/functions/{scoringFunctionName}:
      delete:
        tags:
          - Scoring
          - Functions
        summary: Delete a scoring function
        operationId: deleteEnvironmentScoringFunction
        parameters:
          - $ref: "#/components/parameters/scoringFunctionName"
        responses:
          "204":
            description: Scoring function deleted
          default:
            $ref: "#/components/responses/Error"

components:
    schemas:
        # Analytics
        TopHitApi:
          type: object
          properties:
            id:
              type: string
              description: The API ID
              example: 00f8c9e7-78fc-4907-b8c9-e778fc790750
            name:
              type: string
              description: The API Name
              example: Sample API Name
            count:
              type: integer
              format: int64
              description: The API Hit count
              example: 675234
        AnalyticTimeRange:
          type: object
          description: A Time range
          properties:
            from:
              type: integer
              format: int64
              description: The timestamp starting the time range
              example: 1621339200000
            to:
              type: integer
              format: int64
              description: The timestamp ending the time range
              example: 1621425600000
            interval:
              type: integer
              format: int64
              description: The interval in milliseconds splitting the data
              example: 120000
        TopApp:
            type: object
            properties:
                id:
                    type: string
                    description: The Application ID
                    example: 00f8c9e7-78fc-4907-b8c9-e778fc790750
                name:
                    type: string
                    description: The Application Name
                    example: Sample Application Name
                count:
                    type: integer
                    format: int64
                    description: The Application Hit count
                    example: 675234

      # Shared policy group
        CreateSharedPolicyGroup:
            type: object
            description: Create payload for a shared policy group
            properties:
                crossId:
                    type: string
                    description: The unique ID of the shared policy group
                    example: 5e2b3b3b-3b3b-3b3b-3b3b-3b3b3b3b3b3b
                name:
                    type: string
                    description: The name of the shared policy group
                    example: My Shared Policy Group
                    maxLength: 512
                description:
                    type: string
                    description: The description of the shared policy group
                    example: This is a shared policy group
                    maxLength: 1024
                prerequisiteMessage:
                    type: string
                    description: The prerequisite message of the shared policy group. This message is displayed to the user to help understand the prerequisite to use the shared policy group.
                    example: The resource cache "my-cache" is required
                    maxLength: 1024
                apiType:
                    $ref: "./openapi-apis.yaml#/components/schemas/ApiType"
                originContext:
                  $ref: "./openapi-apis.yaml#/components/schemas/BaseOriginContext"
                phase:
                    $ref: "./openapi-plugins.yaml#/components/schemas/FlowPhase"
                steps:
                    type: array
                    description: The list of steps (policies) in the shared policy group
                    items:
                        $ref: "./openapi-apis.yaml#/components/schemas/StepV4"
            required: ["name", "apiType", "phase"]
        UpdateSharedPolicyGroup:
            type: object
            description: Update payload for a shared policy group
            properties:
                crossId:
                    type: string
                    description: The unique ID of the shared policy group
                    example: 5e2b3b3b-3b3b-3b3b-3b3b-3b3b3b3b3b3b
                name:
                    type: string
                    description: The name of the shared policy group
                    example: My Shared Policy Group
                    maxLength: 512
                description:
                    type: string
                    description: The description of the shared policy group
                    example: This is a shared policy group
                    maxLength: 1024
                prerequisiteMessage:
                    type: string
                    description: The prerequisite message of the shared policy group. This message is displayed to the user to help understand the prerequisite to use the shared policy group.
                    example: The resource cache "my-cache" is required
                    maxLength: 1024
                steps:
                    type: array
                    description: The list of steps (policies) in the shared policy group
                    items:
                        $ref: "./openapi-apis.yaml#/components/schemas/StepV4"
        SharedPolicyGroup:
            type: object
            description: A shared policy group
            properties:
                id:
                    type: string
                    description: The unique ID of the shared policy group
                crossId:
                    type: string
                    description: The unique ID of the shared policy group
                    example: 5e2b3b3b-3b3b-3b3b-3b3b-3b3b3b3b3b3b
                name:
                    type: string
                    description: The name of the shared policy group
                    example: My Shared Policy Group
                    maxLength: 512
                description:
                    type: string
                    description: The description of the shared policy group
                    example: This is a shared policy group
                    maxLength: 1024
                prerequisiteMessage:
                    type: string
                    description: The prerequisite message of the shared policy group. This message is displayed to the user to help understand the prerequisite to use the shared policy group.
                    example: The resource cache "my-cache" is required
                    maxLength: 1024
                version:
                    type: number
                    description: The version of the shared policy group
                    example: 1
                apiType:
                    $ref: "./openapi-apis.yaml#/components/schemas/ApiType"
                originContext:
                  $ref: "./openapi-apis.yaml#/components/schemas/BaseOriginContext"
                steps:
                    type: array
                    description: The list of steps (policies) in the shared policy group
                    items:
                        $ref: "./openapi-apis.yaml#/components/schemas/StepV4"
                phase:
                    $ref: "./openapi-plugins.yaml#/components/schemas/FlowPhase"
                deployedAt:
                    type: string
                    format: date-time
                    description: The date at which the shared policy group was deployed
                    example: 2020-01-01T00:00:00Z
                createdAt:
                    type: string
                    format: date-time
                    description: The date at which the shared policy group was created
                    example: 2020-01-01T00:00:00Z
                updatedAt:
                    type: string
                    format: date-time
                    description: The date at which the shared policy group was last updated
                    example: 2020-01-01T00:00:00Z
                lifecycleState:
                    $ref: "#/components/schemas/SharedPolicyGroupLifecycleState"
        SharedPolicyGroupPolicyPlugin:
            type: object
            description: A shared policy group for a policy plugin
            properties:
                id:
                    type: string
                    description: The unique ID of the shared policy group
                policyId:
                    type: string
                    description: The id of shared-policy-group plugin
                name:
                    type: string
                    description: The name of the shared policy group
                    example: My Shared Policy Group
                    maxLength: 512
                description:
                    type: string
                    description: The description of the shared policy group
                    example: This is a shared policy group
                    maxLength: 1024
                prerequisiteMessage:
                    type: string
                    description: The prerequisite message of the shared policy group. This message is displayed to the user to help understand the prerequisite to use the shared policy group.
                    example: The resource cache "my-cache" is required
                    maxLength: 1024
                apiType:
                    $ref: "./openapi-apis.yaml#/components/schemas/ApiType"
                phase:
                    $ref: "./openapi-plugins.yaml#/components/schemas/FlowPhase"
        SharedPolicyGroupLifecycleState:
            type: string
            description: The lifecycle state of a shared policy group
            example: DEPLOYED
            enum:
                - DEPLOYED
                - UNDEPLOYED
                - PENDING

        # Scoring
        EnvironmentApiScore:
            type: object
            description: The scoring result of an API
            properties:
                id:
                    type: string
                    description: API identifier
                name:
                    type: string
                    description: API name
                pictureUrl:
                    type: string
                    description: The URL to the API's picture
                score:
                    type: number
                    description: The average score of all assets of API
                    example: 0.74
                errors:
                    type: integer
                    description: The total number of violated rules with severity ERROR for all assets.
                    example: 10
                warnings:
                    type: integer
                    description: The total number of violated rules with severity WARN for all assets.
                    example: 20
                infos:
                    type: integer
                    description: The total number of violated rules with severity INFO for all assets.
                    example: 30
                hints:
                    type: integer
                    description: The total number of violated rules with severity HINT for all assets.
                    example: 40
        EnvironmentScoringOverview:
            type: object
            description: The scoring overview of an Environment
            properties:
                id:
                    type: string
                    description: Environment identifier
                score:
                    type: number
                    description: The average score of all APIs
                    example: 0.74
                errors:
                    type: integer
                    description: The total number of violated rules with severity ERROR for all APIs.
                    example: 10
                warnings:
                    type: integer
                    description: The total number of violated rules with severity WARN for all APIs.
                    example: 20
                infos:
                    type: integer
                    description: The total number of violated rules with severity INFO for all APIs.
                    example: 30
                hints:
                    type: integer
                    description: The total number of violated rules with severity HINT for all APIs.
                    example: 40
        ImportScoringRuleset:
            type: object
            description: The scoring ruleset to import
            properties:
                name:
                    type: string
                    minLength: 1
                    description: The name of ruleset
                description:
                    type: string
                    description: The description of ruleset
                payload:
                    type: string
                    minLength: 1
                    description: The ruleset payload
                format:
                    $ref: "#/components/schemas/ScoringAssetFormat"
            required:
              - name
              - payload
              - format
        UpdateScoringRuleset:
            type: object
            description: The scoring ruleset to update
            properties:
                name:
                    type: string
                    description: The name of ruleset
                description:
                    type: string
                    description: The description of ruleset
            required: ["name"]
        ScoringRuleset:
            type: object
            description: A scoring ruleset
            properties:
                id:
                    type: string
                    description: The id of ruleset
                name:
                    type: string
                    description: The name of ruleset
                description:
                    type: string
                    description: The description of ruleset
                payload:
                    type: string
                    description: The ruleset payload
                format:
                    $ref: "#/components/schemas/ScoringAssetFormat"
                createdAt:
                    type: string
                    format: date-time
                    description: The date at which the ruleset was created
                    example: 2020-01-01T00:00:00Z
                updatedAt:
                    type: string
                    format: date-time
                    description: The date at which the ruleset was updated
                    example: 2020-01-01T00:00:00Z
                referenceId:
                    type: string
                    description: The reference Id of ruleset
                referenceType:
                    $ref: "#/components/schemas/ScoringRulesetReferenceType"
        ScoringRulesetReferenceType:
            type: string
            enum:
                - ENVIRONMENT
        ScoringAssetFormat:
          type: string
          description: The format of scoring asset
          enum:
            - GRAVITEE_FEDERATION
            - GRAVITEE_MESSAGE
            - GRAVITEE_PROXY
            - GRAVITEE_NATIVE
            - GRAVITEE_V2
            - OPENAPI
            - ASYNCAPI
        ImportScoringFunction:
          type: object
          description: The scoring scoring function to import
          properties:
            name:
              $ref: "#/components/schemas/ScoringFunctionName"
            payload:
              type: string
              description: The scoring function payload
        ScoringFunction:
          type: object
          description: A scoring ruleset
          properties:
            name:
              $ref: "#/components/schemas/ScoringFunctionName"
            payload:
              type: string
              description: The ruleset payload
            createdAt:
              type: string
              format: date-time
              description: The date at which the ruleset was created
              example: 2020-01-01T00:00:00Z
            referenceId:
              type: string
              description: The reference Id of ruleset
            referenceType:
              $ref: "#/components/schemas/ScoringFunctionReferenceType"
        ScoringFunctionReferenceType:
          type: string
          enum:
            - ENVIRONMENT
        ScoringFunctionName:
          type: string
          pattern: '^[^/]+\.js$'
          description: The name of ruleset

        Error:
            type: object
            properties:
                httpStatus:
                    type: integer
                    format: int32
                    description: The error code
                    example: 400
                message:
                    type: string
                    description: The error message
                    example: Bad request
                technicalCode:
                    type: string
                    description: A technical code to identify the error
                    example: invalid.import.definition
                parameters:
                    type: object
                    description: A map of parameters to be used in the error message
                    additionalProperties:
                        type: string
                details:
                    type: array
                    description: A list of details about the error
                    items:
                        type: object
                        properties:
                            message:
                                type: string
                                description: The error message
                                example: Bad request
                            location:
                                type: string
                                description: The json path of the field in error.
                                example: updateApi.properties[0].key
                            invalidValue:
                                description: The invalid value.
        Pagination:
            description: Generic object to handle pagination data.
            type: object
            properties:
                page:
                    type: integer
                    description: The current page.
                perPage:
                    type: integer
                    description: The number of items requested per page.
                pageCount:
                    type: integer
                    description: The total number of pages.
                pageItemsCount:
                    type: integer
                    description: The number of items for the current page.
                totalCount:
                    type: integer
                    format: int64
                    description: The total number of items.
        Links:
            description: List of links for pagination
            properties:
                self:
                    type: string
                    description: Link to current resource
                first:
                    type: string
                    description: In a paginated response, link to the first page
                last:
                    type: string
                    description: In a paginated response, link to the last page
                previous:
                    type: string
                    description: In a paginated response, link to the previous page. Maybe null if current is the first page
                next:
                    type: string
                    description: In a paginated response, link to the next page. Maybe null if current is the last page

    parameters:
        pageParam:
            name: page
            in: query
            required: false
            description: The page number for pagination.
            schema:
                type: integer
                default: 1
        perPageParam:
            name: perPage
            in: query
            required: false
            description: |
                The number of items per page for pagination.
            schema:
                type: integer
                default: 10
        from:
          name: from
          in: query
          required: false
          description: |
            The timestamp in ms from which the logs will be returned.
          schema:
            type: integer
            format: int64
        to:
          name: to
          in: query
          required: false
          description: |
            The timestamp in ms to which the logs will be returned.
          schema:
            type: integer
            format: int64

        sharedPolicyGroupId:
            name: sharedPolicyGroupId
            in: path
            description: The unique ID of the shared policy group
            required: true
            schema:
                type: string
        sharedPolicyGroupSortByParam:
            name: sortBy
            in: query
            required: false
            description: |-
                Possibility to sort Shared Policy Group results by field.
                Can be ascending or descending with minus '-' prefix.
                By default, no sort is applied.
            schema:
                type: string
                example: name
                enum:
                    - name
                    - -name
                    - apiType
                    - -apiType
                    - phase
                    - -phase
                    - updatedAt
                    - -updatedAt
                    - deployedAt
                    - -deployedAt
        sharedPolicyGroupSearchParam:
            name: q
            in: query
            description: |-
                A search query to filter shared policy groups.
            schema:
                type: string
                example: my shared policy group
        sharedPolicyGroupHistoriesSortByParam:
            name: sortBy
            in: query
            required: false
            description: |-
                Possibility to sort Shared Policy Group history results by field.
                Can be ascending or descending with minus '-' prefix.
                By default, no sort is applied.
            schema:
                type: string
                example: name
                enum:
                    - version
                    - -version
                    - updatedAt
                    - -updatedAt
                    - deployedAt
                    - -deployedAt

        # Scoring
        rulesetId:
            name: rulesetId
            in: path
            description: The unique ID of ruleset
            required: true
            schema:
                type: string
        scoringFunctionName:
          name: scoringFunctionName
          in: path
          description: The name of scoring function
          required: true
          schema:
            $ref: "#/components/schemas/ScoringFunctionName"

    responses:
        SchemaFormResponse:
            description: Schema form of a plugin
            content:
                application/json:
                    schema:
                        type: object
        SharedPolicyGroupsResponse:
            description: Page of shared policy groups
            content:
                application/json:
                    schema:
                        title: "SharedPolicyGroupsResponse"
                        properties:
                            data:
                                description: List of SharedPolicyGroup.
                                type: array
                                items:
                                    $ref: "#/components/schemas/SharedPolicyGroup"
                            pagination:
                                $ref: "./openapi-apis.yaml#/components/schemas/Pagination"
                            links:
                                $ref: "./openapi-apis.yaml#/components/schemas/Links"
        SharedPolicyGroupHistoriesResponse:
            description: Page of shared policy group histories
            content:
                application/json:
                    schema:
                        title: "SharedPolicyGroupHistoriesResponse"
                        properties:
                            data:
                                description: List of SharedPolicyGroup.
                                type: array
                                items:
                                    $ref: "#/components/schemas/SharedPolicyGroup"
                            pagination:
                                $ref: "./openapi-apis.yaml#/components/schemas/Pagination"
                            links:
                                $ref: "./openapi-apis.yaml#/components/schemas/Links"
        Error:
            description: Generic error response
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Error"

        # Analytics
        EnvironmentAnalyticsResponseStatusRangesResponse:
          description: Analytics for status codes by entrypoint at environment level
          content:
            application/json:
              schema:
                title: "EnvironmentAnalyticsResponseStatusRangesResponse"
                description: Environment level API Analytics for status codes by entrypoint.
                properties:
                  ranges:
                    type: object
                    description: Global status ranges
                    additionalProperties:
                      description: A map of response status range and counts
                      type: number
                    example:
                      100.0-200.0:
                        value: 5
                      200.0-300.0:
                        value: 357
                      300.0-400.0:
                        value: 0
                      400.0-500.0:
                        value: 0
                      500.0-600.0:
                        value: 0
        EnvironmentAnalyticsTopHitsApisResponse:
          description: Analytics for top hits APIs at environment level
          content:
            application/json:
              schema:
                title: "EnvironmentAnalyticsTopHitsApisResponse"
                description: Analytics for top hits APIs at environment level
                properties:
                  data:
                    type: array
                    description: List of top hit results
                    items:
                      $ref: "#/components/schemas/TopHitApi"
        EnvironmentAnalyticsRequestResponseTimeResponse:
          description: Analytics for request response times at environment level
          content:
            application/json:
              schema:
                title: "EnvironmentAnalyticsRequestResponseTimeResponse"
                description: Analytics for top hits APIs at environment level
                properties:
                  requestsPerSecond:
                    type: number
                    format: double
                    description: Number of requests per second
                    example: 0.7
                  requestsTotal:
                    type: number
                    format: int64
                    description: Total number of requests
                    example: 3567
                  responseMinTime:
                    type: number
                    format: double
                    description: Response minimum time in ms
                    example: 32.23
                  responseMaxTime:
                    type: number
                    format: double
                    description: Response maximum time in ms
                    example: 7240.11
                  responseAvgTime:
                    type: number
                    format: double
                    description: Response average time in ms
                    example: 89.2
        EnvironmentAnalyticsOverPeriodResponse:
          description: Analytics for number over period
          content:
            application/json:
              schema:
                title: "EnvironmentAnalyticsOverPeriodResponse"
                description: Environment Analytics integer data point on a period.
                properties:
                  timeRange:
                    $ref: "#/components/schemas/AnalyticTimeRange"
                  data:
                    type: array
                    description: Response time average (in milliseconds) over time
                    items:
                      type: integer
                      format: int64
                      minimum: 0
                      exclusiveMinimum: true
        EnvironmentAnalyticsResponseStatusOvertimeResponse:
          description: Analytics for status codes over time
          content:
            application/json:
              schema:
                title: "EnvironmentAnalyticsResponseStatusOvertimeResponse"
                description: Environment Analytics for status codes over time.
                properties:
                  timeRange:
                    $ref: "#/components/schemas/AnalyticTimeRange"
                  data:
                    type: object
                    description: Status count overt time
                    additionalProperties:
                      description: A map of response status and counts
                      type: array
                      items:
                        type: integer
                        format: int64
        EnvironmentAnalyticsTopAppsByRequestCountResponse:
            description: Analytics for top applications by the request count
            content:
                application/json:
                    schema:
                        title: "EnvironmentAnalyticsTopAppsByRequestCountResponse"
                        description: Analytics for top applications by the request count
                        properties:
                            data:
                                type: array
                                description: List of top application results
                                items:
                                    $ref: "#/components/schemas/TopApp"

      # Scoring
        EnvironmentApisScoringResponse:
            description: Page of Apis Scoring
            content:
                application/json:
                    schema:
                        title: "EnvironmentApisScoringResponse"
                        properties:
                            data:
                                description: List of EnvironmentApiScoreSummary.
                                type: array
                                items:
                                    $ref: "#/components/schemas/EnvironmentApiScore"
                            pagination:
                                $ref: "#/components/schemas/Pagination"
                            links:
                                $ref: "#/components/schemas/Links"
        ScoringRulesetsResponse:
            description: Scoring rulesets list
            content:
                application/json:
                    schema:
                        title: "ScoringRulesetsResponse"
                        properties:
                            data:
                                description: List of rulesets.
                                type: array
                                items:
                                    $ref: "#/components/schemas/ScoringRuleset"
        ScoringFunctionsResponse:
          description: Scoring functions list
          content:
            application/json:
              schema:
                title: "ScoringFunctionsResponse"
                properties:
                  data:
                    description: List of rulesets.
                    type: array
                    items:
                      $ref: "#/components/schemas/ScoringFunction"

    securitySchemes:
        BasicAuth:
            type: http
            scheme: basic
        CookieAuth:
            type: apiKey
            in: cookie
            name: Auth-Graviteeio-APIM
