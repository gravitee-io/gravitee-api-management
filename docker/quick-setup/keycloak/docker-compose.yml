#
# Copyright Â© 2015 The Gravitee team (http://gravitee.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

version: '3.8'

networks:
  frontend:
    name: frontend
  storage:
    name: storage

volumes:
  data-elasticsearch:
  keycloak_data:
  data-mongo:

services:

  nginx:
    image: nginx:latest
    hostname: auth.localhost
    restart: unless-stopped
    depends_on:
      - keycloak
    ports:
      - "80:80"
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - frontend

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.6
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=password
      - KEYCLOAK_IMPORT="/tmp/realm-gio.json"
      - PROXY_ADDRESS_FORWARDING="true"
      - Dkeycloak.profile.feature.upload_scripts="enabled"
    restart: always
    ports:
      - 8080:8080
    volumes:
      - ./realm/realm-gio.json:/tmp/realm-gio.json
      - keycloak_data:/opt/keycloak/data
    networks:
      - frontend
    entrypoint: [ "/opt/keycloak/bin/kc.sh", "start-dev", "--import-realm" ]

  mongodb:
    image: mongo:${MONGODB_VERSION:-6.0}
    restart: always
    volumes:
      - data-mongo:/data/db
      - ./.logs/apim-mongodb:/var/log/mongodb
    healthcheck:
      test: mongosh --eval 'db.runCommand({serverStatus:1}).ok' --quiet | grep 1
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - storage

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-8.17.2}
    restart: always
    volumes:
      - data-elasticsearch:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile: 65536
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=5s" ]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - storage

  gateway:
    image: ${APIM_REGISTRY:-graviteeio}/apim-gateway:${APIM_VERSION:-latest}
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      mongodb:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      keycloak:
        condition: service_started
    links:
      - nginx:auth.localhost
    volumes:
      - ./.logs/apim-gateway:/opt/graviteeio-gateway/logs
      - ./.plugins:/opt/graviteeio-gateway/plugins-ext
      - ./.license:/opt/graviteeio-gateway/license
    environment:
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_ratelimit_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_reporters_elasticsearch_endpoints_0=http://elasticsearch:9200
      - gravitee_plugins_path_0=$${gravitee.home}/plugins
      - gravitee_plugins_path_1=$${gravitee.home}/plugins-ext
    networks:
      - storage
      - frontend

  management_api:
    image: ${APIM_REGISTRY:-graviteeio}/apim-management-api:${APIM_VERSION:-latest}
    restart: always
    ports:
      - "8083:8083"
    links:
      - mongodb
      - elasticsearch
    depends_on:
      mongodb:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./.logs/apim-management-api:/opt/graviteeio-management-api/logs
      - ./.plugins:/opt/graviteeio-management-api/plugins-ext
      - ./.license:/opt/graviteeio-management-api/license
    environment:
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_analytics_elasticsearch_endpoints_0=http://elasticsearch:9200
      - gravitee_plugins_path_0=$${gravitee.home}/plugins
      - gravitee_plugins_path_1=$${gravitee.home}/plugins-ext
      - gravitee_security_providers_2_type=oidc
      - gravitee_security_providers_2_id=keycloak
      - gravitee_security_providers_2_clientId=gravitee-client
      - gravitee_security_providers_2_clientSecret=00dc0118-2a0d-4249-86a3-3e133f5de145
      - gravitee_security_providers_2_tokenEndpoint=http://auth.localhost/realms/gio/protocol/openid-connect/token
      - gravitee_security_providers_2_tokenIntrospectionEndpoint=http://auth.localhost/realms/gio/protocol/openid-connect/token/introspect
      - gravitee_security_providers_2_authorizeEndpoint=http://auth.localhost/realms/gio/protocol/openid-connect/auth
      - gravitee_security_providers_2_userInfoEndpoint=http://auth.localhost/realms/gio/protocol/openid-connect/userinfo
      - gravitee_security_providers_2_userLogoutEndpoint=http://auth.localhost/realms/gio/protocol/openid-connect/logout
      - gravitee_security_providers_2_color=#0076b4
      - gravitee_security_providers_2_syncMappings=false
      - gravitee_security_providers_2_scopes_0=openid
      - gravitee_security_providers_2_scopes_1=profile
      - gravitee_security_providers_2_userMapping_id=sub
      - gravitee_security_providers_2_userMapping_email=email
      - gravitee_security_providers_2_userMapping_lastname=lastname
      - gravitee_security_providers_2_userMapping_firstname=family_name
      - gravitee_security_providers_2_userMapping_picture=picture
    networks:
      - storage
      - frontend

  management_ui:
    image: ${APIM_REGISTRY:-graviteeio}/apim-management-ui:${APIM_VERSION:-latest}
    restart: always
    ports:
      - "8084:8080"
    depends_on:
      - management_api
    environment:
      - MGMT_API_URL=http://localhost:8083/management/
    volumes:
      - ./.logs/apim-management-ui:/var/log/nginx
    networks:
      - frontend

  portal_ui:
    image: ${APIM_REGISTRY:-graviteeio}/apim-portal-ui:${APIM_VERSION:-latest}
    restart: always
    ports:
      - "8085:8080"
    depends_on:
      - management_api
    environment:
      - PORTAL_API_URL=http://localhost:8083/portal
    volumes:
      - ./.logs/apim-portal-ui:/var/log/nginx
    networks:
      - frontend
