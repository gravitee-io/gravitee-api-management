# This configuration has been automatically generated by the CircleCI Config SDK.
# For more information, see https://github.com/CircleCI-Public/circleci-config-sdk-ts
# SDK Version: 0.0.0-development

version: 2.1
setup: false
parameters:
  gio_action:
    type: string
    default: pull_requests
    description: ""
  dry_run:
    type: boolean
    default: true
    description: Run in dry run mode?
  docker_tag_as_latest:
    type: boolean
    default: false
    description: Is this version the latest version available?
  graviteeio_version:
    type: string
    default: ""
    description: Version of APIM to be used in docker images
  apim_version_path:
    type: string
    default: /home/circleci/project/pom.xml
    description: Path to pom.xml with APIM version
commands:
  cmd-restore-maven-job-cache:
    parameters:
      jobName:
        type: string
        default: ""
        description: The job name
    steps:
      - restore_cache:
          keys:
            - gravitee-api-management-v11-<< parameters.jobName >>-{{ .Branch }}-{{ checksum "pom.xml" }}
            - gravitee-api-management-v11-<< parameters.jobName >>-{{ .Branch }}
            - gravitee-api-management-v11-<< parameters.jobName >>-master
    description: Restore Maven cache for a dedicated job
  cmd-save-maven-job-cache:
    parameters:
      jobName:
        type: string
        default: ""
        description: The job name
    steps:
      - run:
          name: Exclude all APIM artefacts from cache.
          command: rm -rf ~/.m2/repository/io/gravitee/apim
      - save_cache:
          key: gravitee-api-management-v11-<< parameters.jobName >>-{{ .Branch }}-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
          when: always
    description: Save Maven cache for a dedicated job
  cmd-notify-on-failure:
    steps:
      - keeper/env-export:
          secret-url: keeper://ZOz4db245GNaETVwmPBk8w/field/password
          var-name: SLACK_ACCESS_TOKEN
      - slack/notify:
          channel: C02JENTV2AX
          branch_pattern: master,[0-9]+\.[0-9]+\.x
          event: fail
          template: basic_fail_1
  cmd-install-yarn:
    steps:
      - run:
          name: Yarn Set Version Stable
          command: yarn set version 4.1.1
  cmd-webui-install:
    parameters:
      apim-ui-project:
        type: string
        default: ""
        description: the name of the UI project to build
    steps:
      - restore_cache:
          name: Restore Yarn cache
          keys:
            - << parameters.apim-ui-project >>-cache-v1-{{ .Branch }}-{{ checksum "<< parameters.apim-ui-project >>/yarn.lock" }}
            - << parameters.apim-ui-project >>-cache-v1-{{ .Branch }}
      - run:
          name: Install dependencies
          command: yarn
          working_directory: << parameters.apim-ui-project >>
      - save_cache:
          name: Save Yarn cache
          key: << parameters.apim-ui-project >>-cache-v1-{{ .Branch }}-{{ checksum "<< parameters.apim-ui-project >>/yarn.lock" }}
          paths:
            - ./<< parameters.apim-ui-project >>/node_modules
  cmd-create-docker-context:
    steps:
      - run:
          name: Create docker context for buildx
          command: |-
            docker context create tls-env
            docker buildx create tls-env --use
  cmd-docker-login:
    steps:
      - keeper/env-export:
          secret-url: keeper://Q721P2LSOPJ9qiXLuf5AHQ/field/login
          var-name: DOCKER_REGISTRY_USERNAME
      - keeper/env-export:
          secret-url: keeper://Q721P2LSOPJ9qiXLuf5AHQ/field/password
          var-name: DOCKER_REGISTRY_PASSWORD
      - run:
          name: Login to Azure Container Registry
          command: echo $DOCKER_REGISTRY_PASSWORD | docker login --username $DOCKER_REGISTRY_USERNAME --password-stdin graviteeio.azurecr.io
    description: Login to Azure Container Registry
  cmd-docker-logout:
    steps:
      - run:
          name: Logout from Azure Container Registry
          command: docker logout graviteeio.azurecr.io
    description: Logout from Azure Container Registry
jobs:
  job-setup:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - keeper/env-export:
          secret-url: keeper://7CgijuGiFDSLynRJt1Dm9w/custom_field/xml
          var-name: MAVEN_SETTINGS
      - run:
          command: "echo $MAVEN_SETTINGS > .gravitee.settings.xml "
      - persist_to_workspace:
          root: .
          paths:
            - .gravitee.settings.xml
  job-build:
    docker:
      - image: cimg/openjdk:21.0.5
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - cmd-restore-maven-job-cache:
          jobName: job-build
      - run:
          name: Build project
          command: mvn -s .gravitee.settings.xml clean install --no-transfer-progress --update-snapshots -DskipTests -Dskip.validation=true -T 2C -Dbundle=dev -DwithJavadoc
          environment:
            BUILD_ID: "1234"
            BUILD_NUMBER: "1234"
            GIT_COMMIT: 784ff35ca
      - cmd-notify-on-failure
      - save_cache:
          paths:
            - ~/.m2/repository/io/gravitee/apim
          key: gravitee-api-management-v11-build-apim-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}
          when: on_success
      - cmd-save-maven-job-cache:
          jobName: job-build
      - persist_to_workspace:
          root: ./
          paths:
            - ./gravitee-apim-rest-api/gravitee-apim-rest-api-management/gravitee-apim-rest-api-management-rest/target/classes/console-openapi.*
            - ./gravitee-apim-rest-api/gravitee-apim-rest-api-standalone/gravitee-apim-rest-api-standalone-distribution/target/distribution
            - ./gravitee-apim-gateway/gravitee-apim-gateway-standalone/gravitee-apim-gateway-standalone-distribution/target/distribution
  job-console-webui-build:
    docker:
      - image: cimg/node:20.11.1
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker:
          version: default
      - cmd-install-yarn
      - cmd-webui-install:
          apim-ui-project: gravitee-apim-console-webui
      - run:
          name: Update Build version
          command: "sed -i 's/\"version\": \".*\"/\"version\": \"4.2.0\"/' gravitee-apim-console-webui/build.json"
      - run:
          name: Build
          command: yarn build:prod
          environment:
            NODE_OPTIONS: --max_old_space_size=4086
          working_directory: gravitee-apim-console-webui
      - cmd-notify-on-failure
      - persist_to_workspace:
          root: .
          paths:
            - gravitee-apim-console-webui/dist
  job-portal-webui-build:
    docker:
      - image: cimg/node:20.11.1
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker:
          version: default
      - cmd-install-yarn
      - cmd-webui-install:
          apim-ui-project: gravitee-apim-portal-webui
      - run:
          name: Update Build version
          command: "sed -i 's/\"version\": \".*\"/\"version\": \"4.2.0\"/' gravitee-apim-portal-webui/build.json"
      - run:
          name: Build
          command: yarn build:prod
          environment:
            NODE_OPTIONS: --max_old_space_size=4086
          working_directory: gravitee-apim-portal-webui
      - cmd-webui-install:
          apim-ui-project: gravitee-apim-portal-webui-next
      - run:
          name: Update Build version
          command: "sed -i 's/\"version\": \".*\"/\"version\": \"4.2.0\"/' gravitee-apim-portal-webui-next/build.json"
      - run:
          name: Build
          command: yarn build:prod
          environment:
            NODE_OPTIONS: --max_old_space_size=4086
          working_directory: gravitee-apim-portal-webui-next
      - cmd-notify-on-failure
      - persist_to_workspace:
          root: .
          paths:
            - gravitee-apim-portal-webui/dist
  job-build-docker-image:
    parameters:
      apim-project:
        type: string
        default: ""
        description: the name of the project to build
      docker-context:
        type: string
        default: ""
        description: the name of context folder for docker build
      docker-image-name:
        type: string
        default: ""
        description: the name of the image
    docker:
      - image: cimg/base:stable
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker:
          version: default
      - cmd-create-docker-context
      - cmd-docker-login
      - run:
          name: Build docker image for << parameters.apim-project >>
          command: |-
            docker buildx build --push --platform=linux/arm64,linux/amd64 -f docker/Dockerfile \
            -t graviteeio.azurecr.io/<< parameters.docker-image-name >>:apim-xxx-test-latest \
            << parameters.docker-context >>
          working_directory: << parameters.apim-project >>
      - cmd-docker-logout
  job-e2e-generate-sdk:
    docker:
      - image: cimg/openjdk:21.0.5-node
    resource_class: small
    steps:
      - checkout
      - attach_workspace:
          at: .
      - cmd-install-yarn
      - run:
          name: Generate e2e tests SDK
          command: |-
            sh ./scripts/update-management-sdk.sh
            sh ./scripts/update-management-v2-sdk.sh
            sh ./scripts/update-portal-sdk.sh
          working_directory: gravitee-apim-e2e
      - cmd-webui-install:
          apim-ui-project: gravitee-apim-e2e
      - cmd-notify-on-failure
      - persist_to_workspace:
          root: .
          paths:
            - gravitee-apim-e2e/lib/management-webclient-sdk
            - gravitee-apim-e2e/lib/management-v2-webclient-sdk
            - gravitee-apim-e2e/lib/portal-webclient-sdk
  job-e2e-lint-build:
    docker:
      - image: cimg/node:20.11.1
    resource_class: small
    steps:
      - checkout
      - cmd-install-yarn
      - cmd-webui-install:
          apim-ui-project: gravitee-apim-e2e
      - attach_workspace:
          at: .
      - run:
          name: Check License
          command: yarn lint:license
          working_directory: gravitee-apim-e2e
      - run:
          name: Run Prettier and ESLint
          command: yarn lint
          working_directory: gravitee-apim-e2e
      - run:
          name: Build
          command: yarn build
          working_directory: gravitee-apim-e2e
      - cmd-notify-on-failure
      - persist_to_workspace:
          root: .
          paths:
            - gravitee-apim-e2e/dist
            - gravitee-apim-e2e/node_modules
  job-e2e-test:
    parameters:
      apim_client_tag:
        type: string
        default: ""
      execution_mode:
        type: string
        default: ""
      database:
        type: string
        default: ""
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: false
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - cmd-docker-login
      - keeper/env-export:
          secret-url: keeper://w8WBpALVCgYdxtV5pVrQsw/custom_field/base64
          var-name: GRAVITEE_LICENSE
      - cmd-install-yarn
      - run:
          name: Running API & E2E tests in << parameters.execution_mode >> mode with << parameters.database >> database
          command: |-
            cd gravitee-apim-e2e
            if [ "<< parameters.execution_mode >>" = "v3" ]; then
              echo "Disable v4 emulation engine on APIM Gateway and Rest API"
              export V4_EMULATION_ENGINE_DEFAULT=no
            fi
            if [ -z "<< parameters.apim_client_tag >>" ]; then
              APIM_REGISTRY=graviteeio.azurecr.io APIM_TAG=apim-xxx-test-latest APIM_CLIENT_REGISTRY=graviteeio.azurecr.io APIM_CLIENT_TAG=apim-xxx-test-latest yarn test:api:<< parameters.database >>
            else 
              if [[ "<< parameters.apim_client_tag >>" == *"@"* ]]; then
                echo "Using custom registry for client"
                CLIENT_REGISTRY=$(echo "<< parameters.apim_client_tag >>" | cut -f1 -d@)
                CLIENT_TAG=$(echo "<< parameters.apim_client_tag >>" | cut -f2 -d@)
                APIM_REGISTRY=graviteeio.azurecr.io APIM_TAG=apim-xxx-test-latest APIM_CLIENT_REGISTRY=${CLIENT_REGISTRY} APIM_CLIENT_TAG=${CLIENT_TAG} yarn test:api:<< parameters.database >>
              else
                echo "Using ACR registry for client"
                APIM_REGISTRY=graviteeio.azurecr.io APIM_TAG=apim-xxx-test-latest APIM_CLIENT_REGISTRY=graviteeio.azurecr.io APIM_CLIENT_TAG=<< parameters.apim_client_tag >> yarn test:api:<< parameters.database >>
              fi
            fi
      - cmd-docker-logout
      - cmd-notify-on-failure
      - store_test_results:
          path: ./gravitee-apim-e2e/.tmp/e2e-test-report.xml
      - store_artifacts:
          path: ./gravitee-apim-e2e/.tmp/e2e-test-report.xml
      - store_artifacts:
          path: ./gravitee-apim-e2e/.logs
  job-e2e-cypress:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - cmd-docker-login
      - keeper/env-export:
          secret-url: keeper://FVzylPCgY-LJsgjkW4q1eQ/field/password
          var-name: CYPRESS_CLOUD_KEY
      - cmd-install-yarn
      - run:
          name: Running UI tests
          command: |-
            cd gravitee-apim-e2e
            APIM_REGISTRY=graviteeio.azurecr.io APIM_TAG=apim-xxx-test-latest yarn test:ui
      - cmd-docker-logout
      - cmd-notify-on-failure
      - store_artifacts:
          path: ./gravitee-apim-e2e/.tmp/screenshots
      - store_artifacts:
          path: ./gravitee-apim-e2e/.tmp/videos
      - store_artifacts:
          path: ./gravitee-apim-e2e/.logs
workflows:
  run_e2e_tests:
    jobs:
      - job-setup:
          context:
            - cicd-orchestrator
          name: Setup
      - job-build:
          context:
            - cicd-orchestrator
          requires:
            - Setup
          name: Build backend
      - job-build-docker-image:
          context:
            - cicd-orchestrator
          name: Build APIM Management API docker image
          requires:
            - Build backend
          apim-project: gravitee-apim-rest-api
          docker-context: gravitee-apim-rest-api-standalone/gravitee-apim-rest-api-standalone-distribution/target
          docker-image-name: apim-management-api
      - job-build-docker-image:
          context:
            - cicd-orchestrator
          name: Build APIM Gateway docker image
          requires:
            - Build backend
          apim-project: gravitee-apim-gateway
          docker-context: gravitee-apim-gateway-standalone/gravitee-apim-gateway-standalone-distribution/target
          docker-image-name: apim-gateway
      - job-e2e-generate-sdk:
          context:
            - cicd-orchestrator
          requires:
            - Build backend
          name: Generate e2e tests SDK
      - job-e2e-lint-build:
          context:
            - cicd-orchestrator
          requires:
            - Generate e2e tests SDK
          name: Lint & Build APIM e2e
      - job-console-webui-build:
          context:
            - cicd-orchestrator
          requires:
            - Setup
          name: Build APIM Console
      - job-build-docker-image:
          context:
            - cicd-orchestrator
          name: Build APIM Console docker image
          requires:
            - Build APIM Console
          apim-project: gravitee-apim-console-webui
          docker-context: .
          docker-image-name: apim-management-ui
      - job-portal-webui-build:
          context:
            - cicd-orchestrator
          requires:
            - Setup
          name: Build APIM Portal
      - job-build-docker-image:
          context:
            - cicd-orchestrator
          name: Build APIM Portal docker image
          requires:
            - Build APIM Portal
          apim-project: gravitee-apim-portal-webui
          docker-context: .
          docker-image-name: apim-portal-ui
      - job-e2e-test:
          context:
            - cicd-orchestrator
          name: E2E - << matrix.execution_mode >> - << matrix.database >>
          requires:
            - Lint & Build APIM e2e
            - Build APIM Management API docker image
            - Build APIM Gateway docker image
          matrix:
            parameters:
              execution_mode:
                - v3
                - v4-emulation-engine
              database:
                - mongo
                - jdbc
                - bridge
      - job-e2e-cypress:
          context:
            - cicd-orchestrator
          name: Run Cypress UI tests
          requires:
            - Lint & Build APIM e2e
            - Build APIM Management API docker image
            - Build APIM Gateway docker image
            - Build APIM Console docker image
            - Build APIM Portal docker image
orbs:
  keeper: gravitee-io/keeper@0.7.0
  slack: circleci/slack@4.12.5
