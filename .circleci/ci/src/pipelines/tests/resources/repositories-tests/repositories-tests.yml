# This configuration has been automatically generated by the CircleCI Config SDK.
# For more information, see https://github.com/CircleCI-Public/circleci-config-sdk-ts
# SDK Version: 0.0.0-development

version: 2.1
setup: false
parameters:
  gio_action:
    type: string
    default: pull_requests
    description: ""
  dry_run:
    type: boolean
    default: true
    description: Run in dry run mode?
  docker_tag_as_latest:
    type: boolean
    default: false
    description: Is this version the latest version available?
  graviteeio_version:
    type: string
    default: ""
    description: Version of APIM to be used in docker images
  apim_version_path:
    type: string
    default: /home/circleci/project/pom.xml
    description: Path to pom.xml with APIM version
commands:
  cmd-restore-maven-job-cache:
    parameters:
      jobName:
        type: string
        default: ""
        description: The job name
    steps:
      - restore_cache:
          keys:
            - gravitee-api-management-v10-<< parameters.jobName >>-{{ .Branch }}-{{ checksum "pom.xml" }}
            - gravitee-api-management-v10-<< parameters.jobName >>-{{ .Branch }}
    description: Restore Maven cache for a dedicated job
  cmd-save-maven-job-cache:
    parameters:
      jobName:
        type: string
        default: ""
        description: The job name
    steps:
      - run:
          name: Exclude all APIM artefacts from cache.
          command: rm -rf ~/.m2/repository/io/gravitee/apim
      - save_cache:
          key: gravitee-api-management-v10-<< parameters.jobName >>-{{ .Branch }}-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
          when: always
    description: Save Maven cache for a dedicated job
  cmd-notify-on-failure:
    steps:
      - keeper/env-export:
          secret-url: keeper://ZOz4db245GNaETVwmPBk8w/field/password
          var-name: SLACK_ACCESS_TOKEN
      - slack/notify:
          channel: C02JENTV2AX
          branch_pattern: master,[0-9]+\.[0-9]+\.x
          event: fail
          template: basic_fail_1
jobs:
  job-setup:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - keeper/env-export:
          secret-url: keeper://7CgijuGiFDSLynRJt1Dm9w/custom_field/xml
          var-name: MAVEN_SETTINGS
      - run:
          command: "echo $MAVEN_SETTINGS > .gravitee.settings.xml "
      - persist_to_workspace:
          root: .
          paths:
            - .gravitee.settings.xml
  job-build:
    docker:
      - image: cimg/openjdk:17.0.8
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - cmd-restore-maven-job-cache:
          jobName: job-build
      - run:
          name: Build project
          command: |-
            mvn -s .gravitee.settings.xml clean install --no-transfer-progress --update-snapshots -DskipTests -Dskip.validation=true -T 2C -Dbundle=dev
            mkdir -p ./rest-api-docker-context/distribution && cp -r ./gravitee-apim-rest-api/gravitee-apim-rest-api-standalone/gravitee-apim-rest-api-standalone-distribution/target/distribution ./rest-api-docker-context/.
            mkdir -p ./gateway-docker-context/distribution && cp -r ./gravitee-apim-gateway/gravitee-apim-gateway-standalone/gravitee-apim-gateway-standalone-distribution/target/distribution ./gateway-docker-context/.
          environment:
            BUILD_ID: "1234"
            BUILD_NUMBER: "1234"
            GIT_COMMIT: 784ff35ca
      - cmd-notify-on-failure
      - save_cache:
          paths:
            - ~/.m2/repository/io/gravitee/apim
          key: gravitee-api-management-v10-build-apim-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}
          when: on_success
      - cmd-save-maven-job-cache:
          jobName: job-build
      - persist_to_workspace:
          root: ./
          paths:
            - ./gravitee-apim-rest-api/gravitee-apim-rest-api-management/gravitee-apim-rest-api-management-rest/target/classes/console-openapi.*
            - ./rest-api-docker-context
            - ./gateway-docker-context
  job-jdbc-test-container:
    parameters:
      jdbcType:
        type: string
        default: ""
        description: "Type and version of the database to test. Example: mariadb:10.5"
    machine:
      image: ubuntu-2204:2024.08.1
      docker_layer_caching: true
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - cmd-restore-maven-job-cache:
          jobName: job-jdbc-test-container
      - run:
          name: Run Management repository tests with database << parameters.jdbcType >>
          command: |-
            cd gravitee-apim-repository
            mvn -pl 'gravitee-apim-repository-jdbc' -am -s ../.gravitee.settings.xml clean package --no-transfer-progress -Dskip.validation=true -DjdbcType=<< parameters.jdbcType>> -T 2C
      - run:
          name: Save test results
          command: |-
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - cmd-save-maven-job-cache:
          jobName: job-jdbc-test-container
      - store_test_results:
          path: ~/test-results
      - cmd-notify-on-failure
  job-mongo-test-container:
    parameters:
      mongoVersion:
        type: string
        default: ""
        description: Version of Mongo to test
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: false
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - cmd-restore-maven-job-cache:
          jobName: job-mongo-test-container
      - run:
          name: Run Management repository tests with MongoDB << parameters.mongoVersion >>
          command: |-
            cd gravitee-apim-repository
            mvn -pl 'gravitee-apim-repository-mongodb' -am -s ../.gravitee.settings.xml clean package --no-transfer-progress -Dskip.validation=true -DmongoVersion=<< parameters.mongoVersion>> -T 2C
      - run:
          name: Save test results
          command: |-
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - cmd-save-maven-job-cache:
          jobName: job-mongo-test-container
      - store_test_results:
          path: ~/test-results
      - cmd-notify-on-failure
  job-elastic-test-container:
    parameters:
      engineType:
        type: enum
        default: elasticsearch
        description: Type of the search engine
        enum:
          - elasticsearch
          - opensearch
      engineVersion:
        type: string
        default: ""
        description: Version of engine to test
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: false
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - cmd-restore-maven-job-cache:
          jobName: job-elastic-test-container
      - run:
          name: Run Analytics repository tests with engine << parameters.engineType >> and version << parameters.engineVersion >>
          command: |-
            cd gravitee-apim-repository
            mvn -pl 'gravitee-apim-repository-elasticsearch' -am -s ../.gravitee.settings.xml clean package --no-transfer-progress -Dskip.validation=true -D<< parameters.engineType >>.version=<< parameters.engineVersion >> -Dsearch.type=<< parameters.engineType >> -T 2C
      - run:
          name: Save test results
          command: |-
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - cmd-save-maven-job-cache:
          jobName: job-elastic-test-container
      - store_test_results:
          path: ~/test-results
      - cmd-notify-on-failure
  job-redis-test-container:
    parameters:
      redisVersion:
        type: string
        default: ""
        description: Version of Redis to test
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: false
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - cmd-restore-maven-job-cache:
          jobName: job-redis-test-container
      - run:
          name: Run Rate-limit repository tests with Redis << parameters.redisVersion >>
          command: |-
            cd gravitee-apim-repository
            mvn -pl 'gravitee-apim-repository-redis' -am -s ../.gravitee.settings.xml clean package --no-transfer-progress -Dskip.validation=true -DredisVersion=<< parameters.redisVersion >>
      - run:
          name: Save test results
          command: |-
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - cmd-save-maven-job-cache:
          jobName: job-redis-test-container
      - store_test_results:
          path: ~/test-results
      - cmd-notify-on-failure
workflows:
  repositories-tests:
    jobs:
      - job-setup:
          name: Setup
          context:
            - cicd-orchestrator
      - job-build:
          name: Build
          context:
            - cicd-orchestrator
          requires:
            - Setup
      - job-jdbc-test-container:
          name: Management repository tests - JDBC - << matrix.jdbcType >>
          context:
            - cicd-orchestrator
          requires:
            - Build
          matrix:
            parameters:
              jdbcType:
                - postgresql~13
                - postgresql~14
                - postgresql~15
                - postgresql~16
                - postgresql~17
                - mariadb~10.4
                - mariadb~10.5
                - mariadb~10.6
                - mariadb~10.11
                - mariadb~11.0
                - mariadb~11.1
                - mariadb~11.2
                - mysql~8.0
                - mysql~8.2
                - sqlserver~2017-latest
                - sqlserver~2019-latest
                - sqlserver~2022-latest
      - job-mongo-test-container:
          name: Management repository tests - Mongo << matrix.mongoVersion >>
          context:
            - cicd-orchestrator
          requires:
            - Build
          matrix:
            parameters:
              mongoVersion:
                - "4.4"
                - "5.0"
                - "6.0"
                - "7.0"
                - "8.0"
      - job-elastic-test-container:
          name: Analytics repository tests - ElasticSearch << matrix.engineVersion >>
          context:
            - cicd-orchestrator
          requires:
            - Build
          matrix:
            parameters:
              engineType:
                - elasticsearch
              engineVersion:
                - 7.17.15
                - 8.16.1
      - job-elastic-test-container:
          name: Analytics repository tests - OpenSearch << matrix.engineVersion >>
          context:
            - cicd-orchestrator
          requires:
            - Build
          matrix:
            parameters:
              engineType:
                - opensearch
              engineVersion:
                - "1"
                - "2"
      - job-redis-test-container:
          name: Rate Limit repository tests - Redis << matrix.redisVersion >>
          context:
            - cicd-orchestrator
          requires:
            - Build
          matrix:
            parameters:
              redisVersion:
                - 6.2.6-v9
                - 7.0.6-RC9
                - 7.2.0-v7
                - latest
orbs:
  keeper: gravitee-io/keeper@0.6.3
  slack: circleci/slack@4.12.5
