# This configuration has been automatically generated by the CircleCI Config SDK.
# For more information, see https://github.com/CircleCI-Public/circleci-config-sdk-ts
# SDK Version: 0.0.0-development

version: 2.1
setup: false
parameters:
  gio_action:
    type: string
    default: pull_requests
    description: ""
  dry_run:
    type: boolean
    default: true
    description: Run in dry run mode?
  docker_tag_as_latest:
    type: boolean
    default: false
    description: Is this version the latest version available?
  graviteeio_version:
    type: string
    default: ""
    description: Version of APIM to be used in docker images
  apim_version_path:
    type: string
    default: /home/circleci/project/pom.xml
    description: Path to pom.xml with APIM version
commands:
  cmd-notify-on-failure:
    steps:
      - keeper/env-export:
          secret-url: keeper://ZOz4db245GNaETVwmPBk8w/field/password
          var-name: SLACK_ACCESS_TOKEN
      - slack/notify:
          channel: C02JENTV2AX
          branch_pattern: master,[0-9]+\.[0-9]+\.x
          event: fail
          template: basic_fail_1
  cmd-docker-login:
    steps:
      - keeper/env-export:
          secret-url: keeper://Q721P2LSOPJ9qiXLuf5AHQ/field/login
          var-name: DOCKER_REGISTRY_USERNAME
      - keeper/env-export:
          secret-url: keeper://Q721P2LSOPJ9qiXLuf5AHQ/field/password
          var-name: DOCKER_REGISTRY_PASSWORD
      - run:
          name: Login to Azure Container Registry
          command: echo $DOCKER_REGISTRY_PASSWORD | docker login --username $DOCKER_REGISTRY_USERNAME --password-stdin graviteeio.azurecr.io
    description: Login to Azure Container Registry
  cmd-docker-logout:
    steps:
      - run:
          name: Logout from Azure Container Registry
          command: docker logout graviteeio.azurecr.io
    description: Logout from Azure Container Registry
jobs:
  job-test-apim-charts:
    parameters:
      helmClientVersion:
        type: string
        default: v3.12.3
        description: Version of helm to test
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - helm/install_helm_client:
          version: << parameters.helmClientVersion >>
      - run:
          name: Install helm-unittest plugin
          command: helm plugin install https://github.com/helm-unittest/helm-unittest.git --version 0.5.1
      - run:
          name: Lint the helm charts available in helm/
          command: helm lint helm/
      - run:
          name: Execute the units tests in helm/
          command: helm unittest -f 'tests/**/*.yaml' helm/ -t JUnit -o apim-result.xml
      - store_test_results:
          path: apim-result.xml
      - cmd-notify-on-failure
  job-retag-and-push-docker-image:
    parameters:
      docker-image-name:
        type: string
        default: ""
        description: the name of the image
    docker:
      - image: cimg/base:stable
    resource_class: medium
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - cmd-docker-login
      - run:
          name: Pull existing image
          command: docker pull graviteeio.azurecr.io/<< parameters.docker-image-name >>:master-latest
          working_directory: << parameters.apim-project >>
      - run:
          name: Retag image
          command: "\n          docker tag \\\n            graviteeio.azurecr.io/<< parameters.docker-image-name >>:master-latest \\\n            graviteeio.azurecr.io/<< parameters.docker-image-name >>:apim-1234-my-custom-branch-latest\n        "
      - run:
          name: Push with new tag
          command: docker push graviteeio.azurecr.io/<< parameters.docker-image-name >>:apim-1234-my-custom-branch-latest
      - cmd-docker-logout
  job-publish-pr-docker-images:
    docker:
      - image: cimg/node:20.11.1
    resource_class: small
    steps:
      - checkout
      - attach_workspace:
          at: .
      - keeper/env-export:
          secret-url: keeper://TIlcGPFq4rN5GvgnZb9hng/field/password
          var-name: GITHUB_TOKEN
      - gh/setup
      - run:
          name: Edit Pull Request Description
          environment:
            BRANCH_TAG: apim-1234-my-custom-branch-latest
          command: |-
            # First check there is an associated pull request, otherwise just stop the job here
            if ! gh pr view --json title;
            then
              echo "No PR found for this branch, stopping the job here."
              exit 0
            fi

            # If PR state is different from OPEN
            if [ "$(gh pr view --json state --jq .state)" != "OPEN" ];
            then
              echo "PR is not opened, stopping the job here."
              exit 0
            fi
            export PR_NUMBER=$(gh pr view --json number --jq .number)
            export PR_BODY_DOCKER_IMAGES_SECTION="
            <!-- Docker Images placeholder -->

            üèóÔ∏è Your changes can be tested using the Docker images listed below, which will be available shortly:

                  Console: graviteeio.azurecr.io/apim-management-ui:$BRANCH_TAG
                  Portal: graviteeio.azurecr.io/apim-portal-ui:$BRANCH_TAG
                  Management-api: graviteeio.azurecr.io/apim-management-api:$BRANCH_TAG
                  Gateway: graviteeio.azurecr.io/apim-gateway:$BRANCH_TAG
                  
                  You can also run any quick-setup docker compose via:
                  1. az acr login -n graviteeio
                  2. export APIM_REGISTRY=graviteeio.azurecr.io APIM_VERSION=$BRANCH_TAG && docker-compose down -v && docker-compose pull && docker-compose up

            <!-- Docker Images placeholder end -->
            "

            export CLEAN_BODY=$(gh pr view --json body --jq .body | sed '/Docker Images placeholder -->/,/Docker Images placeholder end -->/d')

            gh pr edit --body "$CLEAN_BODY$PR_BODY_DOCKER_IMAGES_SECTION"
      - cmd-notify-on-failure
  job-validate-workflow-status:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - run:
          name: Check workflow jobs
          command: echo "Congratulations! If you can read this, everything is OK"
workflows:
  pull_requests:
    jobs:
      - aquasec/fs_scan:
          context:
            - cicd-orchestrator
          pre-steps:
            - keeper/env-export:
                secret-url: keeper://QeHHkvALPob4pgs1hMd9Gw/custom_field/API Key
                var-name: AQUA_KEY
            - keeper/env-export:
                secret-url: keeper://QeHHkvALPob4pgs1hMd9Gw/custom_field/Secret
                var-name: AQUA_SECRET
            - keeper/env-export:
                secret-url: keeper://TIlcGPFq4rN5GvgnZb9hng/field/password
                var-name: GITHUB_TOKEN
      - job-test-apim-charts:
          name: Helm Chart - Lint & Test
          context:
            - cicd-orchestrator
      - job-retag-and-push-docker-image:
          name: Build APIM Management API docker image
          docker-image-name: apim-management-api
      - job-retag-and-push-docker-image:
          name: Build APIM Gateway docker image
          docker-image-name: apim-gateway
      - job-retag-and-push-docker-image:
          name: Build APIM Console docker image
          docker-image-name: apim-management-ui
      - job-retag-and-push-docker-image:
          name: Build APIM Portal docker image
          docker-image-name: apim-portal-ui
      - job-publish-pr-docker-images:
          name: Publish docker images in Github PR
          context:
            - cicd-orchestrator
          requires:
            - Build APIM Management API docker image
            - Build APIM Gateway docker image
            - Build APIM Console docker image
            - Build APIM Portal docker image
      - job-validate-workflow-status:
          name: Validate workflow status
          requires:
            - Helm Chart - Lint & Test
            - Build APIM Management API docker image
            - Build APIM Gateway docker image
            - Build APIM Console docker image
            - Build APIM Portal docker image
orbs:
  keeper: gravitee-io/keeper@0.7.0
  aquasec: gravitee-io/aquasec@1.0.5
  helm: circleci/helm@3.0.0
  slack: circleci/slack@4.12.5
  gh: circleci/github-cli@1.0.5
