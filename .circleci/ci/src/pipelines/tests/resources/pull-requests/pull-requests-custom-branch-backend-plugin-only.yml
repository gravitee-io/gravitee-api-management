# This configuration has been automatically generated by the CircleCI Config SDK.
# For more information, see https://github.com/CircleCI-Public/circleci-config-sdk-ts
# SDK Version: 0.0.0-development

version: 2.1
setup: false
parameters:
  gio_action:
    type: string
    default: pull_requests
    description: ""
  dry_run:
    type: boolean
    default: true
    description: Run in dry run mode?
  docker_tag_as_latest:
    type: boolean
    default: false
    description: Is this version the latest version available?
  graviteeio_version:
    type: string
    default: ""
    description: Version of APIM to be used in docker images
  apim_version_path:
    type: string
    default: /home/circleci/project/pom.xml
    description: Path to pom.xml with APIM version
commands:
  cmd-restore-maven-job-cache:
    parameters:
      jobName:
        type: string
        default: ""
        description: The job name
    steps:
      - restore_cache:
          keys:
            - gravitee-api-management-v10-<< parameters.jobName >>-{{ .Branch }}-{{ checksum "pom.xml" }}
            - gravitee-api-management-v10-<< parameters.jobName >>-{{ .Branch }}
            - gravitee-api-management-v10-<< parameters.jobName >>-master
    description: Restore Maven cache for a dedicated job
  cmd-save-maven-job-cache:
    parameters:
      jobName:
        type: string
        default: ""
        description: The job name
    steps:
      - run:
          name: Exclude all APIM artefacts from cache.
          command: rm -rf ~/.m2/repository/io/gravitee/apim
      - save_cache:
          key: gravitee-api-management-v10-<< parameters.jobName >>-{{ .Branch }}-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
          when: always
    description: Save Maven cache for a dedicated job
  cmd-notify-on-failure:
    steps:
      - keeper/env-export:
          secret-url: keeper://ZOz4db245GNaETVwmPBk8w/field/password
          var-name: SLACK_ACCESS_TOKEN
      - slack/notify:
          channel: C02JENTV2AX
          branch_pattern: master,[0-9]+\.[0-9]+\.x
          event: fail
          template: basic_fail_1
jobs:
  job-setup:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - keeper/env-export:
          secret-url: keeper://7CgijuGiFDSLynRJt1Dm9w/custom_field/xml
          var-name: MAVEN_SETTINGS
      - run:
          command: "echo $MAVEN_SETTINGS > .gravitee.settings.xml "
      - persist_to_workspace:
          root: .
          paths:
            - .gravitee.settings.xml
  job-validate:
    docker:
      - image: cimg/openjdk:17.0.8
    resource_class: small
    steps:
      - checkout
      - attach_workspace:
          at: .
      - cmd-restore-maven-job-cache:
          jobName: job-validate
      - run:
          name: Validate project
          command: mvn -s .gravitee.settings.xml validate --no-transfer-progress -Pall-modules,integration-tests-modules -T 2C
      - cmd-notify-on-failure
      - cmd-save-maven-job-cache:
          jobName: job-validate
  job-danger-js:
    docker:
      - image: cimg/node:20.11.1
    resource_class: small
    steps:
      - checkout
      - keeper/env-export:
          secret-url: keeper://TIlcGPFq4rN5GvgnZb9hng/field/password
          var-name: DANGER_GITHUB_API_TOKEN
      - run:
          name: Run Danger JS
          command: cd .circleci/danger && yarn run danger
  job-build:
    docker:
      - image: cimg/openjdk:17.0.8
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - cmd-restore-maven-job-cache:
          jobName: job-build
      - run:
          name: Build project
          command: |-
            mvn -s .gravitee.settings.xml clean install --no-transfer-progress --update-snapshots -DskipTests -Dskip.validation=true -T 2C -Dbundle=dev
            mkdir -p ./rest-api-docker-context/distribution && cp -r ./gravitee-apim-rest-api/gravitee-apim-rest-api-standalone/gravitee-apim-rest-api-standalone-distribution/target/distribution ./rest-api-docker-context/.
            mkdir -p ./gateway-docker-context/distribution && cp -r ./gravitee-apim-gateway/gravitee-apim-gateway-standalone/gravitee-apim-gateway-standalone-distribution/target/distribution ./gateway-docker-context/.
          environment:
            BUILD_ID: "1234"
            BUILD_NUMBER: "1234"
            GIT_COMMIT: 784ff35ca
      - cmd-notify-on-failure
      - save_cache:
          paths:
            - ~/.m2/repository/io/gravitee/apim
          key: gravitee-api-management-v10-build-apim-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}
          when: on_success
      - cmd-save-maven-job-cache:
          jobName: job-build
      - persist_to_workspace:
          root: ./
          paths:
            - ./gravitee-apim-rest-api/gravitee-apim-rest-api-management/gravitee-apim-rest-api-management-rest/target/classes/console-openapi.*
            - ./rest-api-docker-context
            - ./gateway-docker-context
  job-test-integration:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: false
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - cmd-restore-maven-job-cache:
          jobName: job-test-integration
      - restore_cache:
          keys:
            - gravitee-api-management-v10-build-apim-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}
      - run:
          name: Run tests
          command: |-
            cd gravitee-apim-integration-tests
            # List all tests
            circleci tests glob "src/test/java/**/*Test.java" | sed -e 's#^src/test/java/\(.*\)\.java#\1#' | tr "/" "." > all-tests

            # List all tests to run on this executor
            cat all-tests | circleci tests split --split-by=timings --timings-type=classname --time-default=10s > tests-to-run

            # Compute exclusion list (use grep to invert the include list to an exclude list)
            cat all-tests | grep -xvf tests-to-run > /tmp/ignore_list

            # Add * add the end of each line of ignore_list to also exclude all inner classes
            sed -i 's/$/*/' /tmp/ignore_list

            # Display tests to run on this executor
            echo "Following test files will run on this executor:"
            cat tests-to-run

            # Run tests with rerunFailingTestsCount=2 because some integration tests related to RabbitMQ or Websocket are randomly failing on the CI
            mvn --fail-fast -s ../.gravitee.settings.xml test --no-transfer-progress -Dskip.validation=true -Dsurefire.excludesFile=/tmp/ignore_list -Dsurefire.rerunFailingTestsCount=2
      - run:
          name: Save test results
          command: |-
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - cmd-notify-on-failure
      - cmd-save-maven-job-cache:
          jobName: job-test-integration
      - store_test_results:
          path: ~/test-results
    parallelism: 4
  job-test-plugin:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: false
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - cmd-restore-maven-job-cache:
          jobName: job-test-plugin
      - restore_cache:
          keys:
            - gravitee-api-management-v10-build-apim-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}
      - run:
          name: Run plugin tests
          command: mvn --fail-fast -s .gravitee.settings.xml test --no-transfer-progress -Dplugin-modules -Dskip.validation=true -T 2C
      - run:
          name: Save test results
          command: |-
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - cmd-notify-on-failure
      - cmd-save-maven-job-cache:
          jobName: job-test-plugin
      - store_test_results:
          path: ~/test-results
      - persist_to_workspace:
          root: .
          paths:
            - gravitee-apim-plugin/gravitee-apim-plugin-coverage/target/site/jacoco-aggregate/
  job-sonarcloud-analysis:
    parameters:
      working_directory:
        type: string
        default: gravitee-apim-rest-api
        description: Directory where the Sonarcloud analysis will be run
      cache_type:
        type: enum
        default: backend
        description: Type of cache to use
        enum:
          - backend
          - frontend
    docker:
      - image: sonarsource/sonar-scanner-cli:5.0.1
    resource_class: large
    steps:
      - run:
          name: Add SSH tool
          command: apk add --no-cache openssh
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - gravitee-api-management-v10-sonarcloud-analysis-<< parameters.cache_type >>
      - keeper/env-export:
          secret-url: keeper://9x9YgyU6DWzux4DPoHAzDQ/field/password
          var-name: SONAR_TOKEN
      - run:
          name: Run Sonarcloud Analysis
          command: sonar-scanner -Dsonar.projectVersion=4.2.0
          working_directory: << parameters.working_directory >>
      - cmd-notify-on-failure
      - save_cache:
          paths:
            - /opt/sonar-scanner/.sonar/cache
          key: gravitee-api-management-v10-sonarcloud-analysis-<< parameters.cache_type >>
          when: always
  job-validate-workflow-status:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - run:
          name: Check workflow jobs
          command: echo "Congratulations! If you can read this, everything is OK"
workflows:
  pull_requests:
    jobs:
      - job-setup:
          name: Setup
          context:
            - cicd-orchestrator
      - job-validate:
          name: Validate backend
          context:
            - cicd-orchestrator
          requires:
            - Setup
      - job-danger-js:
          name: Run Danger JS
          context:
            - cicd-orchestrator
          requires:
            - Validate backend
      - job-build:
          name: Build backend
          context:
            - cicd-orchestrator
          requires:
            - Validate backend
      - job-test-integration:
          name: Integration tests
          context:
            - cicd-orchestrator
          requires:
            - Build backend
      - job-test-plugin:
          name: Test plugins
          context:
            - cicd-orchestrator
          requires:
            - Build backend
      - job-sonarcloud-analysis:
          name: Sonar - gravitee-apim-plugin
          context:
            - cicd-orchestrator
          requires:
            - Test plugins
          working_directory: gravitee-apim-plugin
          cache_type: backend
      - job-validate-workflow-status:
          name: Validate workflow status
          requires:
            - Test plugins
orbs:
  keeper: gravitee-io/keeper@0.6.3
  slack: circleci/slack@4.12.5
