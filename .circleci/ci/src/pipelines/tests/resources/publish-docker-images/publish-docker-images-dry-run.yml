# This configuration has been automatically generated by the CircleCI Config SDK.
# For more information, see https://github.com/CircleCI-Public/circleci-config-sdk-ts
# SDK Version: 0.0.0-development

version: 2.1
setup: false
parameters:
  gio_action:
    type: string
    default: pull_requests
    description: ""
  dry_run:
    type: boolean
    default: true
    description: Run in dry run mode?
  docker_tag_as_latest:
    type: boolean
    default: false
    description: Is this version the latest version available?
  graviteeio_version:
    type: string
    default: ""
    description: Version of APIM to be used in docker images
  apim_version_path:
    type: string
    default: /home/circleci/project/pom.xml
    description: Path to pom.xml with APIM version
commands:
  cmd-restore-maven-job-cache:
    parameters:
      jobName:
        type: string
        default: ""
        description: The job name
    steps:
      - restore_cache:
          keys:
            - gravitee-api-management-v11-<< parameters.jobName >>-{{ .Branch }}-{{ checksum "pom.xml" }}
            - gravitee-api-management-v11-<< parameters.jobName >>-{{ .Branch }}
            - gravitee-api-management-v11-<< parameters.jobName >>-master
    description: Restore Maven cache for a dedicated job
  cmd-save-maven-job-cache:
    parameters:
      jobName:
        type: string
        default: ""
        description: The job name
    steps:
      - run:
          name: Exclude all APIM artefacts from cache.
          command: rm -rf ~/.m2/repository/io/gravitee/apim
      - save_cache:
          key: gravitee-api-management-v11-<< parameters.jobName >>-{{ .Branch }}-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
          when: always
    description: Save Maven cache for a dedicated job
  cmd-notify-on-failure:
    steps:
      - keeper/env-export:
          secret-url: keeper://ZOz4db245GNaETVwmPBk8w/field/password
          var-name: SLACK_ACCESS_TOKEN
      - slack/notify:
          channel: C02JENTV2AX
          branch_pattern: master,[0-9]+\.[0-9]+\.x
          event: fail
          template: basic_fail_1
  cmd-create-docker-context:
    steps:
      - run:
          name: Create docker context for buildx
          command: |-
            docker context create tls-env
            docker buildx create tls-env --use
  cmd-docker-azure-login:
    steps:
      - keeper/env-export:
          secret-url: keeper://Q721P2LSOPJ9qiXLuf5AHQ/field/login
          var-name: AZURE_DOCKER_REGISTRY_USERNAME
      - keeper/env-export:
          secret-url: keeper://Q721P2LSOPJ9qiXLuf5AHQ/field/password
          var-name: AZURE_DOCKER_REGISTRY_PASSWORD
      - run:
          name: Login to Azure Container Registry
          command: echo $AZURE_DOCKER_REGISTRY_PASSWORD | docker login --username $AZURE_DOCKER_REGISTRY_USERNAME --password-stdin graviteeio.azurecr.io
    description: Login to Azure Container Registry
  cmd-docker-azure-logout:
    steps:
      - run:
          name: Logout from Azure Container Registry
          command: docker logout graviteeio.azurecr.io
    description: Logout from Azure Container Registry
  cmd-install-yarn:
    steps:
      - run:
          name: Yarn Set Version Stable
          command: yarn set version 4.1.1
  cmd-webui-install:
    parameters:
      apim-ui-project:
        type: string
        default: ""
        description: the name of the UI project to build
    steps:
      - restore_cache:
          name: Restore Yarn cache
          keys:
            - << parameters.apim-ui-project >>-cache-v1-{{ .Branch }}-{{ checksum "<< parameters.apim-ui-project >>/yarn.lock" }}
            - << parameters.apim-ui-project >>-cache-v1-{{ .Branch }}
      - run:
          name: Install dependencies
          command: yarn
          working_directory: << parameters.apim-ui-project >>
      - save_cache:
          name: Save Yarn cache
          key: << parameters.apim-ui-project >>-cache-v1-{{ .Branch }}-{{ checksum "<< parameters.apim-ui-project >>/yarn.lock" }}
          paths:
            - ./<< parameters.apim-ui-project >>/node_modules
  cmd-build-ui-image:
    parameters:
      docker-image-name:
        type: string
        default: ""
        description: the name of the image
      apim-ui-project:
        type: string
        default: ""
        description: the name of the UI project to build
    steps:
      - cmd-create-docker-context
      - cmd-docker-azure-login
      - run:
          name: Build UI docker image
          command: |-
            docker buildx build --push --platform=linux/arm64,linux/amd64 -f docker/Dockerfile \
            -t graviteeio.azurecr.io/<< parameters.docker-image-name >>:apim-1234-branch-name-latest \
            .
          working_directory: << parameters.apim-ui-project >>
      - cmd-docker-azure-logout
jobs:
  job-setup:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - keeper/env-export:
          secret-url: keeper://7CgijuGiFDSLynRJt1Dm9w/custom_field/xml
          var-name: MAVEN_SETTINGS
      - run:
          command: "echo $MAVEN_SETTINGS > .gravitee.settings.xml "
      - persist_to_workspace:
          root: .
          paths:
            - .gravitee.settings.xml
  job-build:
    docker:
      - image: cimg/openjdk:21.0.5
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - cmd-restore-maven-job-cache:
          jobName: job-build
      - run:
          name: Build project
          command: |-
            mvn -s .gravitee.settings.xml clean install --no-transfer-progress --update-snapshots -DskipTests -Dskip.validation=true -T 2C -Dbundle=dev -DwithJavadoc
            mkdir -p ./rest-api-docker-context/distribution && cp -r ./gravitee-apim-rest-api/gravitee-apim-rest-api-standalone/gravitee-apim-rest-api-standalone-distribution/target/distribution ./rest-api-docker-context/.
            mkdir -p ./gateway-docker-context/distribution && cp -r ./gravitee-apim-gateway/gravitee-apim-gateway-standalone/gravitee-apim-gateway-standalone-distribution/target/distribution ./gateway-docker-context/.
          environment:
            BUILD_ID: "1234"
            BUILD_NUMBER: "1234"
            GIT_COMMIT: 784ff35ca
      - cmd-notify-on-failure
      - save_cache:
          paths:
            - ~/.m2/repository/io/gravitee/apim
          key: gravitee-api-management-v11-build-apim-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}
          when: on_success
      - cmd-save-maven-job-cache:
          jobName: job-build
      - persist_to_workspace:
          root: ./
          paths:
            - ./gravitee-apim-rest-api/gravitee-apim-rest-api-management/gravitee-apim-rest-api-management-rest/target/classes/console-openapi.*
            - ./rest-api-docker-context
            - ./gateway-docker-context
  job-build-images:
    docker:
      - image: cimg/openjdk:21.0.5
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker:
          version: default
      - cmd-create-docker-context
      - cmd-docker-azure-login
      - run:
          name: Build rest api and gateway docker images
          command: |-
            docker buildx build --push --platform=linux/arm64,linux/amd64 -f gravitee-apim-rest-api/docker/Dockerfile \
            -t graviteeio.azurecr.io/apim-management-api:apim-1234-branch-name-latest \
            rest-api-docker-context

            docker buildx build --push --platform=linux/arm64,linux/amd64 -f gravitee-apim-gateway/docker/Dockerfile \
            -t graviteeio.azurecr.io/apim-gateway:apim-1234-branch-name-latest \
            gateway-docker-context
      - cmd-docker-azure-logout
  job-console-webui-build:
    docker:
      - image: cimg/node:20.11.1
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker:
          version: default
      - cmd-install-yarn
      - cmd-webui-install:
          apim-ui-project: gravitee-apim-console-webui
      - run:
          name: Update Build version
          command: "sed -i 's/\"version\": \".*\"/\"version\": \"4.2.0\"/' gravitee-apim-console-webui/build.json"
      - run:
          name: Build
          command: yarn build:prod
          environment:
            NODE_OPTIONS: --max_old_space_size=4086
          working_directory: gravitee-apim-console-webui
      - cmd-build-ui-image:
          docker-image-name: apim-management-ui
          apim-ui-project: gravitee-apim-console-webui
      - cmd-notify-on-failure
      - persist_to_workspace:
          root: .
          paths:
            - gravitee-apim-console-webui/dist
  job-portal-webui-build:
    docker:
      - image: cimg/node:20.11.1
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker:
          version: default
      - cmd-install-yarn
      - cmd-webui-install:
          apim-ui-project: gravitee-apim-portal-webui
      - run:
          name: Update Build version
          command: "sed -i 's/\"version\": \".*\"/\"version\": \"4.2.0\"/' gravitee-apim-portal-webui/build.json"
      - run:
          name: Build
          command: yarn build:prod
          environment:
            NODE_OPTIONS: --max_old_space_size=4086
          working_directory: gravitee-apim-portal-webui
      - cmd-webui-install:
          apim-ui-project: gravitee-apim-portal-webui-next
      - run:
          name: Update Build version
          command: "sed -i 's/\"version\": \".*\"/\"version\": \"4.2.0\"/' gravitee-apim-portal-webui-next/build.json"
      - run:
          name: Build
          command: yarn build:prod
          environment:
            NODE_OPTIONS: --max_old_space_size=4086
          working_directory: gravitee-apim-portal-webui-next
      - cmd-build-ui-image:
          docker-image-name: apim-portal-ui
          apim-ui-project: gravitee-apim-portal-webui
      - cmd-notify-on-failure
      - persist_to_workspace:
          root: .
          paths:
            - gravitee-apim-portal-webui/dist
  job-publish-pr-env-urls:
    docker:
      - image: cimg/node:20.11.1
    resource_class: small
    steps:
      - checkout
      - attach_workspace:
          at: .
      - keeper/env-export:
          secret-url: keeper://TIlcGPFq4rN5GvgnZb9hng/field/password
          var-name: GITHUB_TOKEN
      - gh/setup
      - run:
          name: Edit Pull Request Description
          command: |-
            # First check there is an associated pull request, otherwise just stop the job here
            if ! gh pr view --json title;
            then
              echo "No PR found for this branch, stopping the job here."
              exit 0
            fi

            # If PR state is different from OPEN
            if [ "$(gh pr view --json state --jq .state)" != "OPEN" ];
            then
              echo "PR is not opened, stopping the job here."
              exit 0
            fi
            export PR_NUMBER=$(gh pr view --json number --jq .number)
            export PR_BODY_ENV_SECTION="
            <!-- Environment placeholder -->

            🏗️ Your changes can be tested here and will be available soon:
                  Console: [https://pr.team-apim.gravitee.dev/$PR_NUMBER/console](https://pr.team-apim.gravitee.dev/$PR_NUMBER/console)
                  Portal: [https://pr.team-apim.gravitee.dev/$PR_NUMBER/portal](https://pr.team-apim.gravitee.dev/$PR_NUMBER/portal)
                  Management-api: [https://pr.team-apim.gravitee.dev/$PR_NUMBER/api/management](https://pr.team-apim.gravitee.dev/$PR_NUMBER/api/management)
                  Gateway v4: [https://pr.team-apim.gravitee.dev/$PR_NUMBER](https://pr.team-apim.gravitee.dev/$PR_NUMBER)
                  Gateway v3: [https://pr.gateway-v3.team-apim.gravitee.dev/$PR_NUMBER](https://pr.gateway-v3.team-apim.gravitee.dev/$PR_NUMBER)

            <!-- Environment placeholder end -->
            "

            export CLEAN_BODY=$(gh pr view --json body --jq .body | sed '/Environment placeholder -->/,/Environment placeholder end -->/d')

            gh pr edit --body "$CLEAN_BODY$PR_BODY_ENV_SECTION"
      - cmd-notify-on-failure
workflows:
  publish_docker_images:
    jobs:
      - job-setup:
          context:
            - cicd-orchestrator
          name: Setup
      - job-build:
          context:
            - cicd-orchestrator
          requires:
            - Setup
          name: Build backend
      - job-build-images:
          context:
            - cicd-orchestrator
          requires:
            - Build backend
          name: Build and push rest api and gateway images
      - job-console-webui-build:
          context:
            - cicd-orchestrator
          requires:
            - Setup
          name: Build APIM Console and publish image
      - job-portal-webui-build:
          context:
            - cicd-orchestrator
          requires:
            - Setup
          name: Build APIM Portal and publish image
      - job-publish-pr-env-urls:
          name: Publish environment URLs in Github PR
          context:
            - cicd-orchestrator
          requires:
            - Build and push rest api and gateway images
            - Build APIM Console and publish image
            - Build APIM Portal and publish image
orbs:
  keeper: gravitee-io/keeper@0.7.0
  slack: circleci/slack@4.12.5
  gh: circleci/github-cli@1.0.5
