# This configuration has been automatically generated by the CircleCI Config SDK.
# For more information, see https://github.com/CircleCI-Public/circleci-config-sdk-ts
# SDK Version: 0.0.0-development

version: 2.1
setup: false
parameters:
  gio_action:
    type: string
    default: pull_requests
    description: ""
  dry_run:
    type: boolean
    default: true
    description: Run in dry run mode?
  docker_tag_as_latest:
    type: boolean
    default: false
    description: Is this version the latest version available?
  graviteeio_version:
    type: string
    default: ""
    description: Version of APIM to be used in docker images
  apim_version_path:
    type: string
    default: /home/circleci/project/pom.xml
    description: Path to pom.xml with APIM version
commands:
  cmd-notify-on-failure:
    steps:
      - keeper/env-export:
          secret-url: keeper://ZOz4db245GNaETVwmPBk8w/field/password
          var-name: SLACK_ACCESS_TOKEN
      - slack/notify:
          channel: C02JENTV2AX
          branch_pattern: master,[0-9]+\.[0-9]+\.x
          event: fail
          template: basic_fail_1
  cmd-install-yarn:
    steps:
      - run:
          name: Yarn Set Version Stable
          command: yarn set version 4.1.1
jobs:
  job-test-apim-charts:
    parameters:
      helmClientVersion:
        type: string
        default: v3.12.3
        description: Version of helm to test
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - helm/install_helm_client:
          version: << parameters.helmClientVersion >>
      - run:
          name: Install helm-unittest plugin
          command: helm plugin install https://github.com/helm-unittest/helm-unittest.git --version 0.5.1
      - run:
          name: Lint the helm charts available in helm/
          command: helm lint helm/
      - run:
          name: Execute the units tests in helm/
          command: helm unittest -f 'tests/**/*.yaml' helm/ -t JUnit -o apim-result.xml
      - store_test_results:
          path: apim-result.xml
      - cmd-notify-on-failure
  job-release-helm:
    docker:
      - image: cimg/node:20.11.1
    resource_class: medium
    steps:
      - checkout
      - keeper/env-export:
          secret-url: keeper://IZd-yvsMopfQEa_0j1SDvg/field/login
          var-name: GIT_USER_NAME
      - keeper/env-export:
          secret-url: keeper://IZd-yvsMopfQEa_0j1SDvg/custom_field/email
          var-name: GIT_USER_EMAIL
      - keeper/env-export:
          secret-url: keeper://TIlcGPFq4rN5GvgnZb9hng/field/password
          var-name: GITHUB_TOKEN
      - add_ssh_keys:
          fingerprints:
            - ac:88:23:8f:c6:0f:7d:f0:fc:df:73:20:34:56:02:6c
      - run:
          name: Git config
          command: |-
            git config --global user.name "${GIT_USER_NAME}"
            git config --global user.email "${GIT_USER_EMAIL}"
      - gh/setup
      - helm/install_helm_client:
          version: v3.12.3
      - run:
          name: build the Charts
          working_directory: ./helm
          command: |-
            helm dependency update
            cp -f "Chart.yaml" "../Chart.yaml.bak"
            cp -f "values.yaml" "../values.yaml.bak"

            mkdir -p charts/docker/io

            helm package -d charts .
            mv charts/apim-*.tgz charts/docker/io/

            sed "s/^name:.*/name: apim3/" -i Chart.yaml
            helm package -d charts .
            mv charts/apim3-*.tgz charts/docker/io/

            mkdir -p charts/aws/dev
            cp -f "../Chart.yaml.bak" "Chart.yaml"
            cp -f "../values.yaml.bak" "values.yaml"
            sed -i -E "s|(repository: )graviteeio/apim-management-api|\1430630701098.dkr.ecr.eu-west-2.amazonaws.com/graviteedev/saas-apim-management-api|g" values.yaml
            sed -i -E "s|(repository: )graviteeio/apim-gateway|\1430630701098.dkr.ecr.eu-west-2.amazonaws.com/graviteedev/saas-apim-gateway|g" values.yaml
            sed -i -E "s|(repository: )graviteeio/apim-portal-ui|\1430630701098.dkr.ecr.eu-west-2.amazonaws.com/graviteedev/saas-apim-portal-ui|g" values.yaml
            sed -i -E "s|(repository: )graviteeio/apim-management-ui|\1430630701098.dkr.ecr.eu-west-2.amazonaws.com/graviteedev/saas-apim-management-ui|g" values.yaml
            helm package -d charts .
            mv charts/apim-*.tgz charts/aws/dev/
      - cmd-install-yarn
      - run:
          name: Install dependencies
          command: yarn
          working_directory: ./release
      - run:
          name: Install AWS CLI
          command: |-
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                        unzip awscliv2.zip
                        sudo ./aws/install
                        aws --version
      - keeper/env-export:
          secret-url: keeper://Q721P2LSOPJ9qiXLuf5AHQ/field/login
          var-name: ACR_USER_NAME
      - keeper/env-export:
          secret-url: keeper://Q721P2LSOPJ9qiXLuf5AHQ/field/password
          var-name: ACR_PASSWORD
      - run:
          name: Publish helm chart release in azure repository DRY-RUN mode
          working_directory: ./helm
          command: |-
            helm registry login graviteeio.azurecr.io --username $ACR_USER_NAME --password $ACR_PASSWORD
            helm push charts/docker/io/apim-*.tgz oci://graviteeio.azurecr.io/helm/
            helm push charts/docker/io/apim3-*.tgz oci://graviteeio.azurecr.io/helm/
      - keeper/env-export:
          secret-url: keeper://AEmKkeWZ4Zq758pvaPIE1A/custom_field/aws_access_key_id
          var-name: AWS_ACCESS_KEY_ID
      - keeper/env-export:
          secret-url: keeper://AEmKkeWZ4Zq758pvaPIE1A/custom_field/aws_secret_access_key
          var-name: AWS_SECRET_ACCESS_KEY
      - keeper/env-export:
          secret-url: keeper://AEmKkeWZ4Zq758pvaPIE1A/custom_field/aws_region
          var-name: AWS_REGION
      - run:
          name: Login to AWS ECR for Helm OCI
          command: aws ecr get-login-password --region $AWS_REGION | helm registry login --username AWS --password-stdin 430630701098.dkr.ecr.eu-west-2.amazonaws.com
      - run:
          name: Publish helm chart release in AWS ECR DRY-RUN mode
          working_directory: ./helm
          command: helm push charts/aws/dev/apim-*.tgz oci://430630701098.dkr.ecr.eu-west-2.amazonaws.com/graviteedev/helm/
workflows:
  release_helm:
    jobs:
      - job-test-apim-charts:
          name: APIM - Lint & Test
          context:
            - cicd-orchestrator
      - job-release-helm:
          requires:
            - APIM - Lint & Test
          context:
            - cicd-orchestrator
orbs:
  helm: circleci/helm@3.0.0
  keeper: gravitee-io/keeper@0.7.0
  slack: circleci/slack@4.12.5
  gh: circleci/github-cli@1.0.5
