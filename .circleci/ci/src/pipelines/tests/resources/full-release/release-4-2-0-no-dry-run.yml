# This configuration has been automatically generated by the CircleCI Config SDK.
# For more information, see https://github.com/CircleCI-Public/circleci-config-sdk-ts
# SDK Version: 0.0.0-development

version: 2.1
setup: false
parameters:
  gio_action:
    type: string
    default: pull_requests
    description: ""
  dry_run:
    type: boolean
    default: true
    description: Run in dry run mode?
  docker_tag_as_latest:
    type: boolean
    default: false
    description: Is this version the latest version available?
  graviteeio_version:
    type: string
    default: ""
    description: Version of APIM to be used in docker images
  apim_version_path:
    type: string
    default: /home/circleci/project/pom.xml
    description: Path to pom.xml with APIM version
commands:
  cmd-install-yarn:
    steps:
      - run:
          name: Yarn Set Version Stable
          command: yarn set version 4.1.1
  cmd-webui-install:
    parameters:
      apim-ui-project:
        type: string
        default: ""
        description: the name of the UI project to build
    steps:
      - restore_cache:
          name: Restore Yarn cache
          keys:
            - << parameters.apim-ui-project >>-cache-v1-{{ .Branch }}-{{ checksum "<< parameters.apim-ui-project >>/yarn.lock" }}
            - << parameters.apim-ui-project >>-cache-v1-{{ .Branch }}
      - run:
          name: Install dependencies
          command: yarn
          working_directory: << parameters.apim-ui-project >>
      - save_cache:
          name: Save Yarn cache
          key: << parameters.apim-ui-project >>-cache-v1-{{ .Branch }}-{{ checksum "<< parameters.apim-ui-project >>/yarn.lock" }}
          paths:
            - ./<< parameters.apim-ui-project >>/node_modules
  cmd-notify-on-failure:
    steps:
      - keeper/env-export:
          secret-url: keeper://ZOz4db245GNaETVwmPBk8w/field/password
          var-name: SLACK_ACCESS_TOKEN
      - slack/notify:
          channel: C02JENTV2AX
          branch_pattern: master,[0-9]+\.[0-9]+\.x
          event: fail
          template: basic_fail_1
  cmd-sync-folder-to-s3:
    parameters:
      folder-to-sync:
        type: string
        default: ""
        description: the path of the folder to sync to S3
    steps:
      - keeper/env-export:
          secret-url: keeper://Mqmplmfu17bDR5XRLmO1mQ/field/password
          var-name: AWS_ACCESS_KEY_ID
      - keeper/env-export:
          secret-url: keeper://3-pU56sIqcyWWw7HxhxjaQ/field/password
          var-name: AWS_SECRET_ACCESS_KEY
      - aws-cli/setup:
          region: cloudfront
          version: 2.22.35
      - aws-s3/sync:
          arguments: --endpoint-url https://cellar-c2.services.clever-cloud.com --acl public-read
          from: << parameters.folder-to-sync>>
          to: s3://gravitee-releases-downloads
    description: Sync folder content to Gravitee download website
  cmd-webui-publish-on-download-website:
    parameters:
      apim-ui-project:
        type: string
        default: ""
        description: the name of the UI project to build
      apim-ui-publish-folder-path:
        type: string
        default: ""
        description: the path to publication folder in download website
    steps:
      - run:
          name: Prepare zip to upload
          command: |
            cp -r dist << parameters.apim-ui-project >>-4.2.0
            zip -r << parameters.apim-ui-project >>-4.2.0.zip << parameters.apim-ui-project >>-4.2.0

            mkdir -p folder_to_sync/<< parameters.apim-ui-publish-folder-path >>
            mv << parameters.apim-ui-project >>-4.2.0.zip folder_to_sync/<< parameters.apim-ui-publish-folder-path >>/<< parameters.apim-ui-project >>-4.2.0.zip
            cd folder_to_sync/<< parameters.apim-ui-publish-folder-path >>

            md5sum << parameters.apim-ui-project >>-4.2.0.zip > << parameters.apim-ui-project >>-4.2.0.zip.md5
            sha512sum << parameters.apim-ui-project >>-4.2.0.zip > << parameters.apim-ui-project >>-4.2.0.zip.sha512sum
            sha1sum << parameters.apim-ui-project >>-4.2.0.zip > << parameters.apim-ui-project >>-4.2.0.zip.sha1
          working_directory: << parameters.apim-ui-project >>
      - cmd-sync-folder-to-s3:
          folder-to-sync: << parameters.apim-ui-project >>/folder_to_sync
  cmd-create-docker-context:
    steps:
      - run:
          name: Create docker context for buildx
          command: |-
            docker context create tls-env
            docker buildx create tls-env --use
  cmd-docker-login:
    steps:
      - keeper/env-export:
          secret-url: keeper://cooU9UoXIk8Kj0hsP2rkBw/field/login
          var-name: DOCKER_REGISTRY_USERNAME
      - keeper/env-export:
          secret-url: keeper://cooU9UoXIk8Kj0hsP2rkBw/field/password
          var-name: DOCKER_REGISTRY_PASSWORD
      - run:
          name: Login to Docker Hub
          command: "echo $DOCKER_REGISTRY_PASSWORD | docker login --username $DOCKER_REGISTRY_USERNAME --password-stdin "
    description: Login to Docker Hub
  cmd-docker-logout:
    steps:
      - run:
          name: Logout from Docker Hub
          command: docker logout
    description: Logout from Docker Hub
  cmd-restore-maven-job-cache:
    parameters:
      jobName:
        type: string
        default: ""
        description: The job name
    steps:
      - restore_cache:
          keys:
            - gravitee-api-management-v11-<< parameters.jobName >>-{{ .Branch }}-{{ checksum "pom.xml" }}
            - gravitee-api-management-v11-<< parameters.jobName >>-{{ .Branch }}
    description: Restore Maven cache for a dedicated job
  cmd-prepare-gpg:
    steps:
      - keeper/install
      - run:
          command: |-
            ksm secret notation keeper://riW92t8X4tk4ZmQc8-FZ4Q/custom_field/armor_format_pub_key > pub.key
            gpg --import pub.key

            ksm secret notation keeper://riW92t8X4tk4ZmQc8-FZ4Q/custom_field/armor_format_private_key > private.key
            # Need --batch to be able to import private key
            gpg --import --batch private.key
    description: Prepare GPG command
  cmd-save-maven-job-cache:
    parameters:
      jobName:
        type: string
        default: ""
        description: The job name
    steps:
      - run:
          name: Exclude all APIM artefacts from cache.
          command: rm -rf ~/.m2/repository/io/gravitee/apim
      - save_cache:
          key: gravitee-api-management-v11-<< parameters.jobName >>-{{ .Branch }}-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
          when: always
    description: Save Maven cache for a dedicated job
jobs:
  job-setup:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - keeper/env-export:
          secret-url: keeper://7CgijuGiFDSLynRJt1Dm9w/custom_field/xml
          var-name: MAVEN_SETTINGS
      - run:
          command: "echo $MAVEN_SETTINGS > .gravitee.settings.xml "
      - persist_to_workspace:
          root: .
          paths:
            - .gravitee.settings.xml
  job-slack-announcement:
    parameters:
      message:
        type: string
        default: ""
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - keeper/env-export:
          secret-url: keeper://ZOz4db245GNaETVwmPBk8w/field/password
          var-name: SLACK_ACCESS_TOKEN
      - slack/notify:
          channel: C02NGT20S4W
          event: always
          custom: |-
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<< parameters.message >>"
                  }
                }
              ]
            }
  job-console-webui-build:
    docker:
      - image: cimg/node:20.11.1
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker:
          version: default
      - cmd-install-yarn
      - cmd-webui-install:
          apim-ui-project: gravitee-apim-console-webui
      - run:
          name: Update Build version
          command: "sed -i 's/\"version\": \".*\"/\"version\": \"4.2.0\"/' gravitee-apim-console-webui/build.json"
      - run:
          name: Build
          command: yarn build:prod
          environment:
            NODE_OPTIONS: --max_old_space_size=4086
          working_directory: gravitee-apim-console-webui
      - cmd-webui-publish-on-download-website:
          apim-ui-project: gravitee-apim-console-webui
          apim-ui-publish-folder-path: graviteeio-apim/components/gravitee-management-webui
      - cmd-notify-on-failure
      - persist_to_workspace:
          root: .
          paths:
            - gravitee-apim-console-webui/dist
  job-portal-webui-build:
    docker:
      - image: cimg/node:20.11.1
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker:
          version: default
      - cmd-install-yarn
      - cmd-webui-install:
          apim-ui-project: gravitee-apim-portal-webui
      - run:
          name: Update Build version
          command: "sed -i 's/\"version\": \".*\"/\"version\": \"4.2.0\"/' gravitee-apim-portal-webui/build.json"
      - run:
          name: Build
          command: yarn build:prod
          environment:
            NODE_OPTIONS: --max_old_space_size=4086
          working_directory: gravitee-apim-portal-webui
      - cmd-webui-install:
          apim-ui-project: gravitee-apim-portal-webui-next
      - run:
          name: Update Build version
          command: "sed -i 's/\"version\": \".*\"/\"version\": \"4.2.0\"/' gravitee-apim-portal-webui-next/build.json"
      - run:
          name: Build
          command: yarn build:prod
          environment:
            NODE_OPTIONS: --max_old_space_size=4086
          working_directory: gravitee-apim-portal-webui-next
      - cmd-webui-publish-on-download-website:
          apim-ui-project: gravitee-apim-portal-webui
          apim-ui-publish-folder-path: graviteeio-apim/components/gravitee-portal-webui
      - cmd-notify-on-failure
      - persist_to_workspace:
          root: .
          paths:
            - gravitee-apim-portal-webui/dist
  job-build-docker-image:
    parameters:
      apim-project:
        type: string
        default: ""
        description: the name of the project to build
      docker-context:
        type: string
        default: ""
        description: the name of context folder for docker build
      docker-image-name:
        type: string
        default: ""
        description: the name of the image
    docker:
      - image: cimg/base:stable
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker:
          version: default
      - cmd-create-docker-context
      - cmd-docker-login
      - run:
          name: Build docker image for << parameters.apim-project >>
          command: |-
            docker buildx build --push --quiet --platform=linux/arm64,linux/amd64 -f docker/Dockerfile \
            -t graviteeio/<< parameters.docker-image-name >>:4.2.0 -t graviteeio/<< parameters.docker-image-name >>:4.2 \
            << parameters.docker-context >>
          working_directory: << parameters.apim-project >>
      - keeper/env-export:
          secret-url: keeper://QeHHkvALPob4pgs1hMd9Gw/custom_field/API Key
          var-name: AQUA_KEY
      - keeper/env-export:
          secret-url: keeper://QeHHkvALPob4pgs1hMd9Gw/custom_field/Secret
          var-name: AQUA_SECRET
      - keeper/env-export:
          secret-url: keeper://LYg-wdlM5UDzSqFFH6Kyig/field/login
          var-name: AQUA_USERNAME
      - keeper/env-export:
          secret-url: keeper://LYg-wdlM5UDzSqFFH6Kyig/field/password
          var-name: AQUA_PASSWORD
      - keeper/env-export:
          secret-url: keeper://QeHHkvALPob4pgs1hMd9Gw/custom_field/ScannerToken
          var-name: SCANNER_TOKEN
      - keeper/env-export:
          secret-url: keeper://TIlcGPFq4rN5GvgnZb9hng/field/password
          var-name: GITHUB_TOKEN
      - aquasec/install_billy
      - aquasec/pull_aqua_scanner_image
      - aquasec/register_artifact:
          artifact_to_register: graviteeio/<< parameters.docker-image-name >>:4.2.0
          debug: true
      - aquasec/scan_docker_image:
          docker_image_to_scan: graviteeio/<< parameters.docker-image-name >>:4.2.0
          scanner_url: https://82fb8f75da.cloud.aquasec.com
      - cmd-docker-logout
  job-backend-build-and-publish-on-download-website:
    docker:
      - image: cimg/openjdk:21.0.5
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - cmd-restore-maven-job-cache:
          jobName: job-backend-build-and-publish-on-download-website
      - run:
          name: Remove `-SNAPSHOT` from versions
          command: |-
            mvn -B versions:set -DremoveSnapshot=true -DgenerateBackupPoms=false
            sed -i "s#<changelist>.*</changelist>#<changelist></changelist>#" pom.xml
      - cmd-prepare-gpg
      - run:
          name: Maven build APIM backend
          command: mvn --settings .gravitee.settings.xml -B -U -P all-modules,gio-release,bundle-default clean verify -DskipTests=true -Dskip.validation -T 4 --no-transfer-progress
          environment:
            BUILD_ID: "1234"
            BUILD_NUMBER: "1234"
            GIT_COMMIT: 784ff35ca
      - cmd-save-maven-job-cache:
          jobName: job-backend-build-and-publish-on-download-website
      - run:
          name: Prepare plugin zip to upload
          command: |-
            workingDir=$(pwd)
            for pathToArtefactFile in $(find . -path '*target/gravitee-apim*.zip'); do
              # Extract folder of the artefact to publish
              # e.g. ./gravitee-apim-repository/gravitee-apim-repository-mongodb/target/gravitee-apim-repository-mongodb-4.4.21.zip => ./gravitee-apim-repository/gravitee-apim-repository-mongodb
              artefactFolder=${pathToArtefactFile%/target*}

              # extract publish folder from pom.xml properties, return '/' if no property found
              publishFolderPath=/$(grep -Po '(?<=<publish-folder-path>).*(?=</publish-folder-path>)' $artefactFolder/pom.xml || echo '')

              if [[ "$publishFolderPath" != "/" ]]; then
                # extract artefact file of the artefact to publish
                # e.g. ./gravitee-apim-repository/gravitee-apim-repository-mongodb/target/gravitee-apim-repository-mongodb-4.4.21.zip => gravitee-apim-repository-mongodb-4.4.21.zip
                artefactFile=${pathToArtefactFile##*/}

                regex="(.*)-[0-9]+.[0-9]+.[0-9]+(-(alpha|beta|rc).[0-9]+)?"
                [[ $artefactFile =~ $regex ]]
                artefactName=${BASH_REMATCH[1]}

                # compute the destination folder on S3 to publish the artefact
                # e.g. gravitee-apim-repository-mongodb-4.4.21.zip => folder_to_sync/graviteeio-apim/plugins/repositories/gravitee-apim-repository-mongodb
                artefactFolderToSync=folder_to_sync${publishFolderPath}/${artefactName}

                mkdir -p $artefactFolderToSync
                cp $pathToArtefactFile $artefactFolderToSync/

                cd $artefactFolderToSync

                md5sum $artefactFile > $artefactFile.md5
                sha512sum $artefactFile > $artefactFile.sha512sum
                sha1sum $artefactFile > $artefactFile.sha1

                cd $workingDir
              fi
            done
      - run:
          name: Prepare management-api component zip to upload
          command: |
            mkdir -p folder_to_sync/graviteeio-apim/components/gravitee-management-rest-api
            cp ./gravitee-apim-rest-api/gravitee-apim-rest-api-standalone/gravitee-apim-rest-api-standalone-distribution/gravitee-apim-rest-api-standalone-distribution-zip/target/gravitee-apim-rest-api-4.2.0.zip folder_to_sync/graviteeio-apim/components/gravitee-management-rest-api/

            cd folder_to_sync/graviteeio-apim/components/gravitee-management-rest-api

            md5sum gravitee-apim-rest-api-4.2.0.zip > gravitee-apim-rest-api-4.2.0.zip.md5
            sha512sum gravitee-apim-rest-api-4.2.0.zip > gravitee-apim-rest-api-4.2.0.zip.sha512sum
            sha1sum gravitee-apim-rest-api-4.2.0.zip > gravitee-apim-rest-api-4.2.0.zip.sha1
      - run:
          name: Prepare gateway component zip to upload
          command: |
            mkdir -p folder_to_sync/graviteeio-apim/components/gravitee-gateway
            cp ./gravitee-apim-gateway/gravitee-apim-gateway-standalone/gravitee-apim-gateway-standalone-distribution/gravitee-apim-gateway-standalone-distribution-zip/target/gravitee-apim-gateway-4.2.0.zip folder_to_sync/graviteeio-apim/components/gravitee-gateway/

            cd folder_to_sync/graviteeio-apim/components/gravitee-gateway

            md5sum gravitee-apim-gateway-4.2.0.zip > gravitee-apim-gateway-4.2.0.zip.md5
            sha512sum gravitee-apim-gateway-4.2.0.zip > gravitee-apim-gateway-4.2.0.zip.sha512sum
            sha1sum gravitee-apim-gateway-4.2.0.zip > gravitee-apim-gateway-4.2.0.zip.sha1
      - cmd-sync-folder-to-s3:
          folder-to-sync: folder_to_sync
      - persist_to_workspace:
          root: .
          paths:
            - ./gravitee-apim-rest-api/gravitee-apim-rest-api-standalone/gravitee-apim-rest-api-standalone-distribution/target/distribution
            - ./gravitee-apim-gateway/gravitee-apim-gateway-standalone/gravitee-apim-gateway-standalone-distribution/target/distribution
  job-release-commit-and-prepare-next-version:
    docker:
      - image: cimg/base:stable
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - ac:88:23:8f:c6:0f:7d:f0:fc:df:73:20:34:56:02:6c
      - keeper/env-export:
          secret-url: keeper://IZd-yvsMopfQEa_0j1SDvg/field/login
          var-name: GIT_USER_NAME
      - keeper/env-export:
          secret-url: keeper://IZd-yvsMopfQEa_0j1SDvg/custom_field/email
          var-name: GIT_USER_EMAIL
      - run:
          name: Git config
          command: |-
            git config --global user.name "${GIT_USER_NAME}"
             git config --global user.email "${GIT_USER_EMAIL}"
      - run:
          name: "Git release "
          command: |
            # Remove `-SNAPSHOT` from source
            # Backend
            sed -i "s#<changelist>.*</changelist>#<changelist></changelist>#" pom.xml

            # UI
            sed -i 's/"version": ".*"/"version": "4.2.0"/' gravitee-apim-console-webui/build.json
            sed -i 's/"version": ".*"/"version": "4.2.0"/' gravitee-apim-portal-webui/build.json
            sed -i 's/"version": ".*"/"version": "4.2.0"/' gravitee-apim-portal-webui-next/build.json

            git add --update
            git commit -m "4.2.0"
            git tag 4.2.0

            # Set the version to the next version (bump patch version + '-SNAPSHOT')
            sed -i "s#<revision>.*</revision>#<revision>4.2.1</revision>#" pom.xml                   
            sed -i "s#<changelist>.*</changelist>#<changelist>-SNAPSHOT</changelist>#" pom.xml
            sed -i "s#<sha1>.*</sha1>#<sha1></sha1>#" pom.xml

            sed -i 's#version: ".*"#version: "4.2.1-SNAPSHOT"#' gravitee-apim-rest-api/gravitee-apim-rest-api-portal/gravitee-apim-rest-api-portal-rest/src/main/resources/portal-openapi.yaml
            sed -i 's#"version": ".*"#"version": "4.2.1-SNAPSHOT"#' gravitee-apim-console-webui/build.json
            sed -i 's#"version": ".*"#"version": "4.2.1-SNAPSHOT"#' gravitee-apim-portal-webui/build.json
            sed -i 's#"version": ".*"#"version": "4.2.1-SNAPSHOT"#' gravitee-apim-portal-webui-next/build.json

            # Helm chart increase version, appVersion and clean the artifacthub.io/changes annotation
            sed -e "0,/^version:/{s/version:.*/version: 4.2.1/}" \
                -e "0,/^appVersion:/{ s/appVersion.*/appVersion: 4.2.1/ }" \
                -e '/artifacthub.io\/changes/,${ s/|// }' \
                -e '/artifacthub.io\/changes:/q0' \
                -i helm/Chart.yaml

            git add --update
            git commit -m 'chore: prepare next version [skip ci]'

            git push -u  origin 4.2.x
            git push --tags  origin 4.2.x
  job-package-bundle:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Building full-distribution bundle
          command: |
            mkdir -p ./folder_to_sync/graviteeio-apim/distributions/graviteeio-full-4.2.0
            # Console
            cp -r gravitee-apim-console-webui/dist ./folder_to_sync/graviteeio-apim/distributions/graviteeio-full-4.2.0/graviteeio-apim-console-ui-4.2.0

            # Portal
            cp -r gravitee-apim-portal-webui/dist ./folder_to_sync/graviteeio-apim/distributions/graviteeio-full-4.2.0/graviteeio-apim-portal-ui-4.2.0

            # Rest API
            cp -r gravitee-apim-rest-api/gravitee-apim-rest-api-standalone/gravitee-apim-rest-api-standalone-distribution/target/distribution ./folder_to_sync/graviteeio-apim/distributions/graviteeio-full-4.2.0/graviteeio-apim-rest-api-4.2.0

            # Gateway
            cp -r gravitee-apim-gateway/gravitee-apim-gateway-standalone/gravitee-apim-gateway-standalone-distribution/target/distribution ./folder_to_sync/graviteeio-apim/distributions/graviteeio-full-4.2.0/graviteeio-apim-gateway-4.2.0

            cd ./folder_to_sync/graviteeio-apim/distributions
            zip -q -r graviteeio-full-4.2.0.zip graviteeio-full-4.2.0

            md5sum graviteeio-full-4.2.0.zip > graviteeio-full-4.2.0.zip.md5
            sha512sum graviteeio-full-4.2.0.zip > graviteeio-full-4.2.0.zip.sha512sum
            sha1sum graviteeio-full-4.2.0.zip > graviteeio-full-4.2.0.zip.sha1

            rm -rf graviteeio-full-4.2.0
      - cmd-sync-folder-to-s3:
          folder-to-sync: folder_to_sync
  job-release-helm:
    docker:
      - image: cimg/node:20.11.1
    resource_class: medium
    steps:
      - checkout
      - keeper/env-export:
          secret-url: keeper://IZd-yvsMopfQEa_0j1SDvg/field/login
          var-name: GIT_USER_NAME
      - keeper/env-export:
          secret-url: keeper://IZd-yvsMopfQEa_0j1SDvg/custom_field/email
          var-name: GIT_USER_EMAIL
      - keeper/env-export:
          secret-url: keeper://TIlcGPFq4rN5GvgnZb9hng/field/password
          var-name: GITHUB_TOKEN
      - add_ssh_keys:
          fingerprints:
            - ac:88:23:8f:c6:0f:7d:f0:fc:df:73:20:34:56:02:6c
      - run:
          name: Git config
          command: |-
            git config --global user.name "${GIT_USER_NAME}"
            git config --global user.email "${GIT_USER_EMAIL}"
      - gh/setup
      - helm/install_helm_client:
          version: v3.12.3
      - run:
          name: Checkout tag 4.2.0
          command: git checkout 4.2.0
      - run:
          name: build the Charts
          working_directory: ./helm
          command: |-
            helm dependency update
            helm package -d charts .

            sed "s/name.*/name: apim3/" -i Chart.yaml
            helm package -d charts .
      - cmd-install-yarn
      - run:
          name: Install dependencies
          command: yarn
          working_directory: ./release
      - run:
          name: Open a PR to publish helm chart release into helm-charts repository
          working_directory: ./release
          command: yarn zx ci-steps/release-helm.mjs --version=4.2.0
  job-publish-rpm-packages:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: false
    resource_class: medium
    steps:
      - keeper/env-export:
          secret-url: keeper://8CG6HxY5gYsl-85eJKuIoA/field/password
          var-name: GIO_PACKAGECLOUD_TOKEN
      - keeper/env-export:
          secret-url: keeper://riW92t8X4tk4ZmQc8-FZ4Q/custom_field/armor_format_pub_key
          var-name: GPG_KEY_PUBLIC
      - keeper/env-export:
          secret-url: keeper://riW92t8X4tk4ZmQc8-FZ4Q/custom_field/armor_format_private_key
          var-name: GPG_KEY_PRIVATE
      - keeper/env-export:
          secret-url: keeper://riW92t8X4tk4ZmQc8-FZ4Q/field/login
          var-name: GPG_KEY_NAME
      - keeper/env-export:
          secret-url: keeper://riW92t8X4tk4ZmQc8-FZ4Q/custom_field/passphrase
          var-name: GPG_KEY_PASSPHRASE
      - run:
          name: Building and publishing RPMs
          command: |
            export GIT_GRAVITEE_PACKAGES_REPO=$(mktemp -d)
            git clone --depth 1 --branch master --single-branch --no-tag git@github.com:gravitee-io/packages.git ${GIT_GRAVITEE_PACKAGES_REPO}

            cd ${GIT_GRAVITEE_PACKAGES_REPO}/apim/4.x
            ./build.sh -v 4.2.0

            echo "change RPM file owner from root to graviteeio"
            docker run --rm \
                -v "${PWD}:/rpms" \
                --workdir /rpms \
                --entrypoint /bin/sh \
                graviteeio/fpm:rpm \
                -c 'chown 1001:1001 *.rpm'

            docker run --rm \
                -v "${PWD}:/rpms" \
                -e "GPG_KEY_NAME" \
                -e "GPG_KEY_PUBLIC" \
                -e "GPG_KEY_PRIVATE" \
                -e "GPG_KEY_PASSPHRASE" \
                graviteeio/rpmsign

            echo "RPMs will be published in https://packagecloud.io/graviteeio/rpms"

            docker run --rm \
                -v "${GIT_GRAVITEE_PACKAGES_REPO}/apim/4.x:/packages" \
                -e PACKAGECLOUD_TOKEN=${GIO_PACKAGECLOUD_TOKEN} \
                digitalocean/packagecloud \
                push --yes --skip-errors --verbose graviteeio/rpms/el/7 /packages/*.rpm
  job-release-notes-apim:
    docker:
      - image: cimg/node:20.11.1
    resource_class: medium
    steps:
      - checkout
      - keeper/env-export:
          secret-url: keeper://IZd-yvsMopfQEa_0j1SDvg/field/login
          var-name: GIT_USER_NAME
      - keeper/env-export:
          secret-url: keeper://IZd-yvsMopfQEa_0j1SDvg/custom_field/email
          var-name: GIT_USER_EMAIL
      - keeper/env-export:
          secret-url: keeper://TIlcGPFq4rN5GvgnZb9hng/field/password
          var-name: GITHUB_TOKEN
      - keeper/env-export:
          secret-url: keeper://ZOz4db245GNaETVwmPBk8w/field/password
          var-name: SLACK_ACCESS_TOKEN
      - keeper/env-export:
          secret-url: keeper://hfnQD5TEfxzwRXUKhJhM-A/field/password
          var-name: JIRA_TOKEN
      - add_ssh_keys:
          fingerprints:
            - ac:88:23:8f:c6:0f:7d:f0:fc:df:73:20:34:56:02:6c
      - run:
          name: Git config
          command: |-
            git config --global user.name "${GIT_USER_NAME}"
            git config --global user.email "${GIT_USER_EMAIL}"
      - gh/setup
      - cmd-install-yarn
      - run:
          name: Install dependencies
          command: yarn
          working_directory: ./release
      - run:
          name: Open a PR to create release notes into docs repository
          command: yarn zx --quiet ci-steps/generate-changelog.mjs --version=4.2.0
          working_directory: ./release
      - run:
          name: Get RELEASE_NOTES_PR_URL
          command: echo "export RELEASE_NOTES_PR_URL=$(cat /tmp/releaseNotesPrUrl.txt)" >> $BASH_ENV
      - slack/notify:
          channel: C02NGT20S4W
          event: pass
          custom: |-
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":memo: APIM Changelog 4.2.0 can be completed <${RELEASE_NOTES_PR_URL}|here> @tech_writers_team :pray:"
                  }
                }
              ]
            }
  job-nexus-staging:
    docker:
      - image: cimg/openjdk:21.0.5
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Checkout tag 4.2.0
          command: git checkout 4.2.0
      - cmd-restore-maven-job-cache:
          jobName: job-nexus-staging
      - attach_workspace:
          at: .
      - cmd-prepare-gpg
      - run:
          name: Release on Nexus
          command: mvn clean deploy --activate-profiles gravitee-release --batch-mode -T 4 -DskipTests -Dskip.validation=true --settings .gravitee.settings.xml --update-snapshots
      - cmd-save-maven-job-cache:
          jobName: job-nexus-staging
  job-trigger-saas-docker-images:
    docker:
      - image: cimg/base:stable
    resource_class: medium
    steps:
      - run:
          name: Trigger SaaS Docker images pipeline
          command: |-
            PIPELINE_ID=$(curl --request POST --url https://circleci.com/api/v2/project/github/gravitee-io/cloud-distributions/pipeline --header "Circle-Token: ${CIRCLE_TOKEN}" --header 'content-type: application/json' --data '{"parameters":{"project":"apim", "distribution":"prod", "branch-version":"4.2.x", "release-version":"4.2.0", "dry-run":false}}' | jq -r '.id')
            echo "Pipeline triggered with ID: $PIPELINE_ID"
            waitForPipelineCompletion() {
                while true; do
                    STATUS=$(curl --request GET --url "https://circleci.com/api/v2/pipeline/$PIPELINE_ID/workflow" --header "Circle-Token: ${CIRCLE_TOKEN}" | jq -r '.items[].status')
                    echo "Current status: $STATUS"
                    if [[ "$STATUS" == "success" ]]; then
                        echo "Pipeline completed successfully."
                        break
                    elif [[ "$STATUS" == "failed" ]]; then
                        echo "Pipeline failed."
                        exit 1
                    fi
                    sleep 30
                done
            }  
            waitForPipelineCompletion
workflows:
  full_release:
    jobs:
      - job-setup:
          context:
            - cicd-orchestrator
          name: Setup
      - job-slack-announcement:
          context:
            - cicd-orchestrator
          name: Announce release is starting
          message: 🚀 Starting APIM 4.2.0 release!
      - job-portal-webui-build:
          context:
            - cicd-orchestrator
          name: Build APIM Portal and publish on download website
          requires:
            - Setup
      - job-build-docker-image:
          context:
            - cicd-orchestrator
          name: Build APIM Portal docker image for APIM 4.2.0
          requires:
            - Build APIM Portal and publish on download website
          apim-project: gravitee-apim-portal-webui
          docker-context: .
          docker-image-name: apim-portal-ui
      - job-console-webui-build:
          context:
            - cicd-orchestrator
          name: Build APIM Console and publish on download website
          requires:
            - Setup
      - job-build-docker-image:
          context:
            - cicd-orchestrator
          name: Build APIM Console docker image for APIM 4.2.0
          requires:
            - Build APIM Console and publish on download website
          apim-project: gravitee-apim-console-webui
          docker-context: .
          docker-image-name: apim-management-ui
      - job-backend-build-and-publish-on-download-website:
          context:
            - cicd-orchestrator
          name: Backend build and publish on download website
          requires:
            - Setup
      - job-build-docker-image:
          context:
            - cicd-orchestrator
          name: Build APIM Management API docker image for APIM 4.2.0
          requires:
            - Backend build and publish on download website
          apim-project: gravitee-apim-rest-api
          docker-context: gravitee-apim-rest-api-standalone/gravitee-apim-rest-api-standalone-distribution/target
          docker-image-name: apim-management-api
      - job-build-docker-image:
          context:
            - cicd-orchestrator
          name: Build APIM Gateway docker image for APIM 4.2.0
          requires:
            - Backend build and publish on download website
          apim-project: gravitee-apim-gateway
          docker-context: gravitee-apim-gateway-standalone/gravitee-apim-gateway-standalone-distribution/target
          docker-image-name: apim-gateway
      - job-release-commit-and-prepare-next-version:
          context:
            - cicd-orchestrator
          name: Commit and prepare next version
          requires:
            - Backend build and publish on download website
            - Build APIM Console and publish on download website
            - Build APIM Portal and publish on download website
      - job-package-bundle:
          context:
            - cicd-orchestrator
          name: Package bundle
          requires:
            - Commit and prepare next version
      - job-publish-rpm-packages:
          context:
            - cicd-orchestrator
          name: Build and push RPM packages for APIM 4.2.0
          requires:
            - Package bundle
      - job-trigger-saas-docker-images:
          context:
            - cicd-orchestrator
            - keeper-orb-publishing
          name: Trigger SaaS Docker images creation
          requires:
            - Build APIM Portal docker image for APIM 4.2.0
            - Build APIM Console docker image for APIM 4.2.0
            - Build APIM Management API docker image for APIM 4.2.0
            - Build APIM Gateway docker image for APIM 4.2.0
      - job-nexus-staging:
          context:
            - cicd-orchestrator
          name: Nexus staging
          requires:
            - Trigger SaaS Docker images creation
      - job-release-helm:
          context:
            - cicd-orchestrator
          name: Release Helm Chart
          requires:
            - Trigger SaaS Docker images creation
      - job-release-notes-apim:
          context:
            - cicd-orchestrator
          name: Create release note pull request
          requires:
            - Release Helm Chart
            - Build and push RPM packages for APIM 4.2.0
      - job-slack-announcement:
          context:
            - cicd-orchestrator
          name: Announce release is completed
          message: 🎆 APIM - 4.2.0 released!
          requires:
            - Nexus staging
            - Release Helm Chart
            - Build and push RPM packages for APIM 4.2.0
orbs:
  keeper: gravitee-io/keeper@0.6.3
  slack: circleci/slack@4.12.5
  aws-s3: circleci/aws-s3@4.1.0
  aws-cli: circleci/aws-cli@5.1.2
  aquasec: gravitee-io/aquasec@1.0.4
  helm: circleci/helm@3.0.0
  gh: circleci/github-cli@1.0.5
